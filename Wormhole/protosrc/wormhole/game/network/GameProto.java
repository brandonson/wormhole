// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

package wormhole.game.network;

public final class GameProto {
  private GameProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    MAP(0, 0),
    ATTACK(1, 1),
    UNIT_ARRIVAL(2, 2),
    ALL_UNIT_CHANGE(3, 3),
    OWNER_CHANGE(4, 4),
    DISCONNECT(5, 5),
    SEND_PLAYER_DATA(6, 6),
    PLAYER_DATA(7, 7),
    NEW_UNIT_GROUP(8, 8),
    UNIT_GROUP_POSITION(9, 9),
    ;
    
    public static final int MAP_VALUE = 0;
    public static final int ATTACK_VALUE = 1;
    public static final int UNIT_ARRIVAL_VALUE = 2;
    public static final int ALL_UNIT_CHANGE_VALUE = 3;
    public static final int OWNER_CHANGE_VALUE = 4;
    public static final int DISCONNECT_VALUE = 5;
    public static final int SEND_PLAYER_DATA_VALUE = 6;
    public static final int PLAYER_DATA_VALUE = 7;
    public static final int NEW_UNIT_GROUP_VALUE = 8;
    public static final int UNIT_GROUP_POSITION_VALUE = 9;
    
    
    public final int getNumber() { return value; }
    
    public static MessageType valueOf(int value) {
      switch (value) {
        case 0: return MAP;
        case 1: return ATTACK;
        case 2: return UNIT_ARRIVAL;
        case 3: return ALL_UNIT_CHANGE;
        case 4: return OWNER_CHANGE;
        case 5: return DISCONNECT;
        case 6: return SEND_PLAYER_DATA;
        case 7: return PLAYER_DATA;
        case 8: return NEW_UNIT_GROUP;
        case 9: return UNIT_GROUP_POSITION;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final MessageType[] VALUES = {
      MAP, ATTACK, UNIT_ARRIVAL, ALL_UNIT_CHANGE, OWNER_CHANGE, DISCONNECT, SEND_PLAYER_DATA, PLAYER_DATA, NEW_UNIT_GROUP, UNIT_GROUP_POSITION, 
    };
    
    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private MessageType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:wormhole.MessageType)
  }
  
  public interface IncomingMessageTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .wormhole.MessageType type = 1;
    boolean hasType();
    wormhole.game.network.GameProto.MessageType getType();
  }
  public static final class IncomingMessageType extends
      com.google.protobuf.GeneratedMessage
      implements IncomingMessageTypeOrBuilder {
    // Use IncomingMessageType.newBuilder() to construct.
    private IncomingMessageType(Builder builder) {
      super(builder);
    }
    private IncomingMessageType(boolean noInit) {}
    
    private static final IncomingMessageType defaultInstance;
    public static IncomingMessageType getDefaultInstance() {
      return defaultInstance;
    }
    
    public IncomingMessageType getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_IncomingMessageType_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_IncomingMessageType_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .wormhole.MessageType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private wormhole.game.network.GameProto.MessageType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public wormhole.game.network.GameProto.MessageType getType() {
      return type_;
    }
    
    private void initFields() {
      type_ = wormhole.game.network.GameProto.MessageType.MAP;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.IncomingMessageType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.IncomingMessageType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.IncomingMessageType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.IncomingMessageType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.IncomingMessageType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.IncomingMessageType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.IncomingMessageType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.IncomingMessageType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.IncomingMessageType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.IncomingMessageType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.IncomingMessageType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.IncomingMessageTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_IncomingMessageType_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_IncomingMessageType_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.IncomingMessageType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = wormhole.game.network.GameProto.MessageType.MAP;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.IncomingMessageType.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.IncomingMessageType getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.IncomingMessageType.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.IncomingMessageType build() {
        wormhole.game.network.GameProto.IncomingMessageType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.IncomingMessageType buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.IncomingMessageType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.IncomingMessageType buildPartial() {
        wormhole.game.network.GameProto.IncomingMessageType result = new wormhole.game.network.GameProto.IncomingMessageType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.IncomingMessageType) {
          return mergeFrom((wormhole.game.network.GameProto.IncomingMessageType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.IncomingMessageType other) {
        if (other == wormhole.game.network.GameProto.IncomingMessageType.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              wormhole.game.network.GameProto.MessageType value = wormhole.game.network.GameProto.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .wormhole.MessageType type = 1;
      private wormhole.game.network.GameProto.MessageType type_ = wormhole.game.network.GameProto.MessageType.MAP;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public wormhole.game.network.GameProto.MessageType getType() {
        return type_;
      }
      public Builder setType(wormhole.game.network.GameProto.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = wormhole.game.network.GameProto.MessageType.MAP;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.IncomingMessageType)
    }
    
    static {
      defaultInstance = new IncomingMessageType(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.IncomingMessageType)
  }
  
  public interface MapOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 width = 3;
    boolean hasWidth();
    int getWidth();
    
    // required int32 height = 4;
    boolean hasHeight();
    int getHeight();
    
    // repeated .wormhole.MapGridSpace space = 1;
    java.util.List<wormhole.game.network.GameProto.MapGridSpace> 
        getSpaceList();
    wormhole.game.network.GameProto.MapGridSpace getSpace(int index);
    int getSpaceCount();
    java.util.List<? extends wormhole.game.network.GameProto.MapGridSpaceOrBuilder> 
        getSpaceOrBuilderList();
    wormhole.game.network.GameProto.MapGridSpaceOrBuilder getSpaceOrBuilder(
        int index);
    
    // repeated .wormhole.Player player = 2;
    java.util.List<wormhole.game.network.GameProto.Player> 
        getPlayerList();
    wormhole.game.network.GameProto.Player getPlayer(int index);
    int getPlayerCount();
    java.util.List<? extends wormhole.game.network.GameProto.PlayerOrBuilder> 
        getPlayerOrBuilderList();
    wormhole.game.network.GameProto.PlayerOrBuilder getPlayerOrBuilder(
        int index);
  }
  public static final class Map extends
      com.google.protobuf.GeneratedMessage
      implements MapOrBuilder {
    // Use Map.newBuilder() to construct.
    private Map(Builder builder) {
      super(builder);
    }
    private Map(boolean noInit) {}
    
    private static final Map defaultInstance;
    public static Map getDefaultInstance() {
      return defaultInstance;
    }
    
    public Map getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_Map_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_Map_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 width = 3;
    public static final int WIDTH_FIELD_NUMBER = 3;
    private int width_;
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getWidth() {
      return width_;
    }
    
    // required int32 height = 4;
    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getHeight() {
      return height_;
    }
    
    // repeated .wormhole.MapGridSpace space = 1;
    public static final int SPACE_FIELD_NUMBER = 1;
    private java.util.List<wormhole.game.network.GameProto.MapGridSpace> space_;
    public java.util.List<wormhole.game.network.GameProto.MapGridSpace> getSpaceList() {
      return space_;
    }
    public java.util.List<? extends wormhole.game.network.GameProto.MapGridSpaceOrBuilder> 
        getSpaceOrBuilderList() {
      return space_;
    }
    public int getSpaceCount() {
      return space_.size();
    }
    public wormhole.game.network.GameProto.MapGridSpace getSpace(int index) {
      return space_.get(index);
    }
    public wormhole.game.network.GameProto.MapGridSpaceOrBuilder getSpaceOrBuilder(
        int index) {
      return space_.get(index);
    }
    
    // repeated .wormhole.Player player = 2;
    public static final int PLAYER_FIELD_NUMBER = 2;
    private java.util.List<wormhole.game.network.GameProto.Player> player_;
    public java.util.List<wormhole.game.network.GameProto.Player> getPlayerList() {
      return player_;
    }
    public java.util.List<? extends wormhole.game.network.GameProto.PlayerOrBuilder> 
        getPlayerOrBuilderList() {
      return player_;
    }
    public int getPlayerCount() {
      return player_.size();
    }
    public wormhole.game.network.GameProto.Player getPlayer(int index) {
      return player_.get(index);
    }
    public wormhole.game.network.GameProto.PlayerOrBuilder getPlayerOrBuilder(
        int index) {
      return player_.get(index);
    }
    
    private void initFields() {
      width_ = 0;
      height_ = 0;
      space_ = java.util.Collections.emptyList();
      player_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSpaceCount(); i++) {
        if (!getSpace(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPlayerCount(); i++) {
        if (!getPlayer(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < space_.size(); i++) {
        output.writeMessage(1, space_.get(i));
      }
      for (int i = 0; i < player_.size(); i++) {
        output.writeMessage(2, player_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, height_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < space_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, space_.get(i));
      }
      for (int i = 0; i < player_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, player_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, height_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.Map parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.Map parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.Map parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.Map parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.Map parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.Map parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.Map parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.Map parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.Map parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.Map parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.Map prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.MapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_Map_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_Map_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.Map.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSpaceFieldBuilder();
          getPlayerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (spaceBuilder_ == null) {
          space_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          spaceBuilder_.clear();
        }
        if (playerBuilder_ == null) {
          player_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playerBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.Map.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.Map getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.Map.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.Map build() {
        wormhole.game.network.GameProto.Map result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.Map buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.Map result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.Map buildPartial() {
        wormhole.game.network.GameProto.Map result = new wormhole.game.network.GameProto.Map(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.height_ = height_;
        if (spaceBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            space_ = java.util.Collections.unmodifiableList(space_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.space_ = space_;
        } else {
          result.space_ = spaceBuilder_.build();
        }
        if (playerBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            player_ = java.util.Collections.unmodifiableList(player_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.player_ = player_;
        } else {
          result.player_ = playerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.Map) {
          return mergeFrom((wormhole.game.network.GameProto.Map)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.Map other) {
        if (other == wormhole.game.network.GameProto.Map.getDefaultInstance()) return this;
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (spaceBuilder_ == null) {
          if (!other.space_.isEmpty()) {
            if (space_.isEmpty()) {
              space_ = other.space_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSpaceIsMutable();
              space_.addAll(other.space_);
            }
            onChanged();
          }
        } else {
          if (!other.space_.isEmpty()) {
            if (spaceBuilder_.isEmpty()) {
              spaceBuilder_.dispose();
              spaceBuilder_ = null;
              space_ = other.space_;
              bitField0_ = (bitField0_ & ~0x00000004);
              spaceBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSpaceFieldBuilder() : null;
            } else {
              spaceBuilder_.addAllMessages(other.space_);
            }
          }
        }
        if (playerBuilder_ == null) {
          if (!other.player_.isEmpty()) {
            if (player_.isEmpty()) {
              player_ = other.player_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayerIsMutable();
              player_.addAll(other.player_);
            }
            onChanged();
          }
        } else {
          if (!other.player_.isEmpty()) {
            if (playerBuilder_.isEmpty()) {
              playerBuilder_.dispose();
              playerBuilder_ = null;
              player_ = other.player_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playerBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerFieldBuilder() : null;
            } else {
              playerBuilder_.addAllMessages(other.player_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasWidth()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        for (int i = 0; i < getSpaceCount(); i++) {
          if (!getSpace(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPlayerCount(); i++) {
          if (!getPlayer(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              wormhole.game.network.GameProto.MapGridSpace.Builder subBuilder = wormhole.game.network.GameProto.MapGridSpace.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSpace(subBuilder.buildPartial());
              break;
            }
            case 18: {
              wormhole.game.network.GameProto.Player.Builder subBuilder = wormhole.game.network.GameProto.Player.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPlayer(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              width_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              height_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 width = 3;
      private int width_ ;
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getWidth() {
        return width_;
      }
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000001;
        width_ = value;
        onChanged();
        return this;
      }
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 height = 4;
      private int height_ ;
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getHeight() {
        return height_;
      }
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000002;
        height_ = value;
        onChanged();
        return this;
      }
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .wormhole.MapGridSpace space = 1;
      private java.util.List<wormhole.game.network.GameProto.MapGridSpace> space_ =
        java.util.Collections.emptyList();
      private void ensureSpaceIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          space_ = new java.util.ArrayList<wormhole.game.network.GameProto.MapGridSpace>(space_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.game.network.GameProto.MapGridSpace, wormhole.game.network.GameProto.MapGridSpace.Builder, wormhole.game.network.GameProto.MapGridSpaceOrBuilder> spaceBuilder_;
      
      public java.util.List<wormhole.game.network.GameProto.MapGridSpace> getSpaceList() {
        if (spaceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(space_);
        } else {
          return spaceBuilder_.getMessageList();
        }
      }
      public int getSpaceCount() {
        if (spaceBuilder_ == null) {
          return space_.size();
        } else {
          return spaceBuilder_.getCount();
        }
      }
      public wormhole.game.network.GameProto.MapGridSpace getSpace(int index) {
        if (spaceBuilder_ == null) {
          return space_.get(index);
        } else {
          return spaceBuilder_.getMessage(index);
        }
      }
      public Builder setSpace(
          int index, wormhole.game.network.GameProto.MapGridSpace value) {
        if (spaceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpaceIsMutable();
          space_.set(index, value);
          onChanged();
        } else {
          spaceBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSpace(
          int index, wormhole.game.network.GameProto.MapGridSpace.Builder builderForValue) {
        if (spaceBuilder_ == null) {
          ensureSpaceIsMutable();
          space_.set(index, builderForValue.build());
          onChanged();
        } else {
          spaceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSpace(wormhole.game.network.GameProto.MapGridSpace value) {
        if (spaceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpaceIsMutable();
          space_.add(value);
          onChanged();
        } else {
          spaceBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSpace(
          int index, wormhole.game.network.GameProto.MapGridSpace value) {
        if (spaceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpaceIsMutable();
          space_.add(index, value);
          onChanged();
        } else {
          spaceBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSpace(
          wormhole.game.network.GameProto.MapGridSpace.Builder builderForValue) {
        if (spaceBuilder_ == null) {
          ensureSpaceIsMutable();
          space_.add(builderForValue.build());
          onChanged();
        } else {
          spaceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSpace(
          int index, wormhole.game.network.GameProto.MapGridSpace.Builder builderForValue) {
        if (spaceBuilder_ == null) {
          ensureSpaceIsMutable();
          space_.add(index, builderForValue.build());
          onChanged();
        } else {
          spaceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSpace(
          java.lang.Iterable<? extends wormhole.game.network.GameProto.MapGridSpace> values) {
        if (spaceBuilder_ == null) {
          ensureSpaceIsMutable();
          super.addAll(values, space_);
          onChanged();
        } else {
          spaceBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSpace() {
        if (spaceBuilder_ == null) {
          space_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          spaceBuilder_.clear();
        }
        return this;
      }
      public Builder removeSpace(int index) {
        if (spaceBuilder_ == null) {
          ensureSpaceIsMutable();
          space_.remove(index);
          onChanged();
        } else {
          spaceBuilder_.remove(index);
        }
        return this;
      }
      public wormhole.game.network.GameProto.MapGridSpace.Builder getSpaceBuilder(
          int index) {
        return getSpaceFieldBuilder().getBuilder(index);
      }
      public wormhole.game.network.GameProto.MapGridSpaceOrBuilder getSpaceOrBuilder(
          int index) {
        if (spaceBuilder_ == null) {
          return space_.get(index);  } else {
          return spaceBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends wormhole.game.network.GameProto.MapGridSpaceOrBuilder> 
           getSpaceOrBuilderList() {
        if (spaceBuilder_ != null) {
          return spaceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(space_);
        }
      }
      public wormhole.game.network.GameProto.MapGridSpace.Builder addSpaceBuilder() {
        return getSpaceFieldBuilder().addBuilder(
            wormhole.game.network.GameProto.MapGridSpace.getDefaultInstance());
      }
      public wormhole.game.network.GameProto.MapGridSpace.Builder addSpaceBuilder(
          int index) {
        return getSpaceFieldBuilder().addBuilder(
            index, wormhole.game.network.GameProto.MapGridSpace.getDefaultInstance());
      }
      public java.util.List<wormhole.game.network.GameProto.MapGridSpace.Builder> 
           getSpaceBuilderList() {
        return getSpaceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.game.network.GameProto.MapGridSpace, wormhole.game.network.GameProto.MapGridSpace.Builder, wormhole.game.network.GameProto.MapGridSpaceOrBuilder> 
          getSpaceFieldBuilder() {
        if (spaceBuilder_ == null) {
          spaceBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              wormhole.game.network.GameProto.MapGridSpace, wormhole.game.network.GameProto.MapGridSpace.Builder, wormhole.game.network.GameProto.MapGridSpaceOrBuilder>(
                  space_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          space_ = null;
        }
        return spaceBuilder_;
      }
      
      // repeated .wormhole.Player player = 2;
      private java.util.List<wormhole.game.network.GameProto.Player> player_ =
        java.util.Collections.emptyList();
      private void ensurePlayerIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          player_ = new java.util.ArrayList<wormhole.game.network.GameProto.Player>(player_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.game.network.GameProto.Player, wormhole.game.network.GameProto.Player.Builder, wormhole.game.network.GameProto.PlayerOrBuilder> playerBuilder_;
      
      public java.util.List<wormhole.game.network.GameProto.Player> getPlayerList() {
        if (playerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(player_);
        } else {
          return playerBuilder_.getMessageList();
        }
      }
      public int getPlayerCount() {
        if (playerBuilder_ == null) {
          return player_.size();
        } else {
          return playerBuilder_.getCount();
        }
      }
      public wormhole.game.network.GameProto.Player getPlayer(int index) {
        if (playerBuilder_ == null) {
          return player_.get(index);
        } else {
          return playerBuilder_.getMessage(index);
        }
      }
      public Builder setPlayer(
          int index, wormhole.game.network.GameProto.Player value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerIsMutable();
          player_.set(index, value);
          onChanged();
        } else {
          playerBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setPlayer(
          int index, wormhole.game.network.GameProto.Player.Builder builderForValue) {
        if (playerBuilder_ == null) {
          ensurePlayerIsMutable();
          player_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addPlayer(wormhole.game.network.GameProto.Player value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerIsMutable();
          player_.add(value);
          onChanged();
        } else {
          playerBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addPlayer(
          int index, wormhole.game.network.GameProto.Player value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerIsMutable();
          player_.add(index, value);
          onChanged();
        } else {
          playerBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addPlayer(
          wormhole.game.network.GameProto.Player.Builder builderForValue) {
        if (playerBuilder_ == null) {
          ensurePlayerIsMutable();
          player_.add(builderForValue.build());
          onChanged();
        } else {
          playerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addPlayer(
          int index, wormhole.game.network.GameProto.Player.Builder builderForValue) {
        if (playerBuilder_ == null) {
          ensurePlayerIsMutable();
          player_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllPlayer(
          java.lang.Iterable<? extends wormhole.game.network.GameProto.Player> values) {
        if (playerBuilder_ == null) {
          ensurePlayerIsMutable();
          super.addAll(values, player_);
          onChanged();
        } else {
          playerBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearPlayer() {
        if (playerBuilder_ == null) {
          player_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playerBuilder_.clear();
        }
        return this;
      }
      public Builder removePlayer(int index) {
        if (playerBuilder_ == null) {
          ensurePlayerIsMutable();
          player_.remove(index);
          onChanged();
        } else {
          playerBuilder_.remove(index);
        }
        return this;
      }
      public wormhole.game.network.GameProto.Player.Builder getPlayerBuilder(
          int index) {
        return getPlayerFieldBuilder().getBuilder(index);
      }
      public wormhole.game.network.GameProto.PlayerOrBuilder getPlayerOrBuilder(
          int index) {
        if (playerBuilder_ == null) {
          return player_.get(index);  } else {
          return playerBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends wormhole.game.network.GameProto.PlayerOrBuilder> 
           getPlayerOrBuilderList() {
        if (playerBuilder_ != null) {
          return playerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(player_);
        }
      }
      public wormhole.game.network.GameProto.Player.Builder addPlayerBuilder() {
        return getPlayerFieldBuilder().addBuilder(
            wormhole.game.network.GameProto.Player.getDefaultInstance());
      }
      public wormhole.game.network.GameProto.Player.Builder addPlayerBuilder(
          int index) {
        return getPlayerFieldBuilder().addBuilder(
            index, wormhole.game.network.GameProto.Player.getDefaultInstance());
      }
      public java.util.List<wormhole.game.network.GameProto.Player.Builder> 
           getPlayerBuilderList() {
        return getPlayerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.game.network.GameProto.Player, wormhole.game.network.GameProto.Player.Builder, wormhole.game.network.GameProto.PlayerOrBuilder> 
          getPlayerFieldBuilder() {
        if (playerBuilder_ == null) {
          playerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              wormhole.game.network.GameProto.Player, wormhole.game.network.GameProto.Player.Builder, wormhole.game.network.GameProto.PlayerOrBuilder>(
                  player_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          player_ = null;
        }
        return playerBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.Map)
    }
    
    static {
      defaultInstance = new Map(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.Map)
  }
  
  public interface MapGridSpaceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 x = 4;
    boolean hasX();
    int getX();
    
    // required int32 y = 5;
    boolean hasY();
    int getY();
    
    // required int32 productivity = 1;
    boolean hasProductivity();
    int getProductivity();
    
    // required int32 defense = 2;
    boolean hasDefense();
    int getDefense();
    
    // optional int32 owner_id = 6;
    boolean hasOwnerId();
    int getOwnerId();
    
    // repeated .wormhole.UnitInfo unit_info = 7;
    java.util.List<wormhole.game.network.GameProto.UnitInfo> 
        getUnitInfoList();
    wormhole.game.network.GameProto.UnitInfo getUnitInfo(int index);
    int getUnitInfoCount();
    java.util.List<? extends wormhole.game.network.GameProto.UnitInfoOrBuilder> 
        getUnitInfoOrBuilderList();
    wormhole.game.network.GameProto.UnitInfoOrBuilder getUnitInfoOrBuilder(
        int index);
  }
  public static final class MapGridSpace extends
      com.google.protobuf.GeneratedMessage
      implements MapGridSpaceOrBuilder {
    // Use MapGridSpace.newBuilder() to construct.
    private MapGridSpace(Builder builder) {
      super(builder);
    }
    private MapGridSpace(boolean noInit) {}
    
    private static final MapGridSpace defaultInstance;
    public static MapGridSpace getDefaultInstance() {
      return defaultInstance;
    }
    
    public MapGridSpace getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_MapGridSpace_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_MapGridSpace_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 x = 4;
    public static final int X_FIELD_NUMBER = 4;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getX() {
      return x_;
    }
    
    // required int32 y = 5;
    public static final int Y_FIELD_NUMBER = 5;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getY() {
      return y_;
    }
    
    // required int32 productivity = 1;
    public static final int PRODUCTIVITY_FIELD_NUMBER = 1;
    private int productivity_;
    public boolean hasProductivity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getProductivity() {
      return productivity_;
    }
    
    // required int32 defense = 2;
    public static final int DEFENSE_FIELD_NUMBER = 2;
    private int defense_;
    public boolean hasDefense() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getDefense() {
      return defense_;
    }
    
    // optional int32 owner_id = 6;
    public static final int OWNER_ID_FIELD_NUMBER = 6;
    private int ownerId_;
    public boolean hasOwnerId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getOwnerId() {
      return ownerId_;
    }
    
    // repeated .wormhole.UnitInfo unit_info = 7;
    public static final int UNIT_INFO_FIELD_NUMBER = 7;
    private java.util.List<wormhole.game.network.GameProto.UnitInfo> unitInfo_;
    public java.util.List<wormhole.game.network.GameProto.UnitInfo> getUnitInfoList() {
      return unitInfo_;
    }
    public java.util.List<? extends wormhole.game.network.GameProto.UnitInfoOrBuilder> 
        getUnitInfoOrBuilderList() {
      return unitInfo_;
    }
    public int getUnitInfoCount() {
      return unitInfo_.size();
    }
    public wormhole.game.network.GameProto.UnitInfo getUnitInfo(int index) {
      return unitInfo_.get(index);
    }
    public wormhole.game.network.GameProto.UnitInfoOrBuilder getUnitInfoOrBuilder(
        int index) {
      return unitInfo_.get(index);
    }
    
    private void initFields() {
      x_ = 0;
      y_ = 0;
      productivity_ = 0;
      defense_ = 0;
      ownerId_ = 0;
      unitInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProductivity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDefense()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getUnitInfoCount(); i++) {
        if (!getUnitInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(1, productivity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(2, defense_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(4, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(5, y_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, ownerId_);
      }
      for (int i = 0; i < unitInfo_.size(); i++) {
        output.writeMessage(7, unitInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, productivity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, defense_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, y_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, ownerId_);
      }
      for (int i = 0; i < unitInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, unitInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.MapGridSpace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.MapGridSpace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.MapGridSpace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.MapGridSpace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.MapGridSpace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.MapGridSpace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.MapGridSpace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.MapGridSpace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.MapGridSpace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.MapGridSpace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.MapGridSpace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.MapGridSpaceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_MapGridSpace_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_MapGridSpace_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.MapGridSpace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUnitInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        productivity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        defense_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ownerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (unitInfoBuilder_ == null) {
          unitInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          unitInfoBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.MapGridSpace.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.MapGridSpace getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.MapGridSpace.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.MapGridSpace build() {
        wormhole.game.network.GameProto.MapGridSpace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.MapGridSpace buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.MapGridSpace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.MapGridSpace buildPartial() {
        wormhole.game.network.GameProto.MapGridSpace result = new wormhole.game.network.GameProto.MapGridSpace(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.productivity_ = productivity_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.defense_ = defense_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ownerId_ = ownerId_;
        if (unitInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            unitInfo_ = java.util.Collections.unmodifiableList(unitInfo_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.unitInfo_ = unitInfo_;
        } else {
          result.unitInfo_ = unitInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.MapGridSpace) {
          return mergeFrom((wormhole.game.network.GameProto.MapGridSpace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.MapGridSpace other) {
        if (other == wormhole.game.network.GameProto.MapGridSpace.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasProductivity()) {
          setProductivity(other.getProductivity());
        }
        if (other.hasDefense()) {
          setDefense(other.getDefense());
        }
        if (other.hasOwnerId()) {
          setOwnerId(other.getOwnerId());
        }
        if (unitInfoBuilder_ == null) {
          if (!other.unitInfo_.isEmpty()) {
            if (unitInfo_.isEmpty()) {
              unitInfo_ = other.unitInfo_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureUnitInfoIsMutable();
              unitInfo_.addAll(other.unitInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.unitInfo_.isEmpty()) {
            if (unitInfoBuilder_.isEmpty()) {
              unitInfoBuilder_.dispose();
              unitInfoBuilder_ = null;
              unitInfo_ = other.unitInfo_;
              bitField0_ = (bitField0_ & ~0x00000020);
              unitInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUnitInfoFieldBuilder() : null;
            } else {
              unitInfoBuilder_.addAllMessages(other.unitInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasProductivity()) {
          
          return false;
        }
        if (!hasDefense()) {
          
          return false;
        }
        for (int i = 0; i < getUnitInfoCount(); i++) {
          if (!getUnitInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000004;
              productivity_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000008;
              defense_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              ownerId_ = input.readInt32();
              break;
            }
            case 58: {
              wormhole.game.network.GameProto.UnitInfo.Builder subBuilder = wormhole.game.network.GameProto.UnitInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addUnitInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 x = 4;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 y = 5;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 productivity = 1;
      private int productivity_ ;
      public boolean hasProductivity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getProductivity() {
        return productivity_;
      }
      public Builder setProductivity(int value) {
        bitField0_ |= 0x00000004;
        productivity_ = value;
        onChanged();
        return this;
      }
      public Builder clearProductivity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        productivity_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 defense = 2;
      private int defense_ ;
      public boolean hasDefense() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getDefense() {
        return defense_;
      }
      public Builder setDefense(int value) {
        bitField0_ |= 0x00000008;
        defense_ = value;
        onChanged();
        return this;
      }
      public Builder clearDefense() {
        bitField0_ = (bitField0_ & ~0x00000008);
        defense_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 owner_id = 6;
      private int ownerId_ ;
      public boolean hasOwnerId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getOwnerId() {
        return ownerId_;
      }
      public Builder setOwnerId(int value) {
        bitField0_ |= 0x00000010;
        ownerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearOwnerId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ownerId_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .wormhole.UnitInfo unit_info = 7;
      private java.util.List<wormhole.game.network.GameProto.UnitInfo> unitInfo_ =
        java.util.Collections.emptyList();
      private void ensureUnitInfoIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          unitInfo_ = new java.util.ArrayList<wormhole.game.network.GameProto.UnitInfo>(unitInfo_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.game.network.GameProto.UnitInfo, wormhole.game.network.GameProto.UnitInfo.Builder, wormhole.game.network.GameProto.UnitInfoOrBuilder> unitInfoBuilder_;
      
      public java.util.List<wormhole.game.network.GameProto.UnitInfo> getUnitInfoList() {
        if (unitInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(unitInfo_);
        } else {
          return unitInfoBuilder_.getMessageList();
        }
      }
      public int getUnitInfoCount() {
        if (unitInfoBuilder_ == null) {
          return unitInfo_.size();
        } else {
          return unitInfoBuilder_.getCount();
        }
      }
      public wormhole.game.network.GameProto.UnitInfo getUnitInfo(int index) {
        if (unitInfoBuilder_ == null) {
          return unitInfo_.get(index);
        } else {
          return unitInfoBuilder_.getMessage(index);
        }
      }
      public Builder setUnitInfo(
          int index, wormhole.game.network.GameProto.UnitInfo value) {
        if (unitInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitInfoIsMutable();
          unitInfo_.set(index, value);
          onChanged();
        } else {
          unitInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setUnitInfo(
          int index, wormhole.game.network.GameProto.UnitInfo.Builder builderForValue) {
        if (unitInfoBuilder_ == null) {
          ensureUnitInfoIsMutable();
          unitInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          unitInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addUnitInfo(wormhole.game.network.GameProto.UnitInfo value) {
        if (unitInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitInfoIsMutable();
          unitInfo_.add(value);
          onChanged();
        } else {
          unitInfoBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addUnitInfo(
          int index, wormhole.game.network.GameProto.UnitInfo value) {
        if (unitInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitInfoIsMutable();
          unitInfo_.add(index, value);
          onChanged();
        } else {
          unitInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addUnitInfo(
          wormhole.game.network.GameProto.UnitInfo.Builder builderForValue) {
        if (unitInfoBuilder_ == null) {
          ensureUnitInfoIsMutable();
          unitInfo_.add(builderForValue.build());
          onChanged();
        } else {
          unitInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addUnitInfo(
          int index, wormhole.game.network.GameProto.UnitInfo.Builder builderForValue) {
        if (unitInfoBuilder_ == null) {
          ensureUnitInfoIsMutable();
          unitInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          unitInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllUnitInfo(
          java.lang.Iterable<? extends wormhole.game.network.GameProto.UnitInfo> values) {
        if (unitInfoBuilder_ == null) {
          ensureUnitInfoIsMutable();
          super.addAll(values, unitInfo_);
          onChanged();
        } else {
          unitInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearUnitInfo() {
        if (unitInfoBuilder_ == null) {
          unitInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          unitInfoBuilder_.clear();
        }
        return this;
      }
      public Builder removeUnitInfo(int index) {
        if (unitInfoBuilder_ == null) {
          ensureUnitInfoIsMutable();
          unitInfo_.remove(index);
          onChanged();
        } else {
          unitInfoBuilder_.remove(index);
        }
        return this;
      }
      public wormhole.game.network.GameProto.UnitInfo.Builder getUnitInfoBuilder(
          int index) {
        return getUnitInfoFieldBuilder().getBuilder(index);
      }
      public wormhole.game.network.GameProto.UnitInfoOrBuilder getUnitInfoOrBuilder(
          int index) {
        if (unitInfoBuilder_ == null) {
          return unitInfo_.get(index);  } else {
          return unitInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends wormhole.game.network.GameProto.UnitInfoOrBuilder> 
           getUnitInfoOrBuilderList() {
        if (unitInfoBuilder_ != null) {
          return unitInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(unitInfo_);
        }
      }
      public wormhole.game.network.GameProto.UnitInfo.Builder addUnitInfoBuilder() {
        return getUnitInfoFieldBuilder().addBuilder(
            wormhole.game.network.GameProto.UnitInfo.getDefaultInstance());
      }
      public wormhole.game.network.GameProto.UnitInfo.Builder addUnitInfoBuilder(
          int index) {
        return getUnitInfoFieldBuilder().addBuilder(
            index, wormhole.game.network.GameProto.UnitInfo.getDefaultInstance());
      }
      public java.util.List<wormhole.game.network.GameProto.UnitInfo.Builder> 
           getUnitInfoBuilderList() {
        return getUnitInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.game.network.GameProto.UnitInfo, wormhole.game.network.GameProto.UnitInfo.Builder, wormhole.game.network.GameProto.UnitInfoOrBuilder> 
          getUnitInfoFieldBuilder() {
        if (unitInfoBuilder_ == null) {
          unitInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              wormhole.game.network.GameProto.UnitInfo, wormhole.game.network.GameProto.UnitInfo.Builder, wormhole.game.network.GameProto.UnitInfoOrBuilder>(
                  unitInfo_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          unitInfo_ = null;
        }
        return unitInfoBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.MapGridSpace)
    }
    
    static {
      defaultInstance = new MapGridSpace(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.MapGridSpace)
  }
  
  public interface UnitInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 owner = 1;
    boolean hasOwner();
    int getOwner();
    
    // required int32 count = 2;
    boolean hasCount();
    int getCount();
  }
  public static final class UnitInfo extends
      com.google.protobuf.GeneratedMessage
      implements UnitInfoOrBuilder {
    // Use UnitInfo.newBuilder() to construct.
    private UnitInfo(Builder builder) {
      super(builder);
    }
    private UnitInfo(boolean noInit) {}
    
    private static final UnitInfo defaultInstance;
    public static UnitInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnitInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_UnitInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_UnitInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 owner = 1;
    public static final int OWNER_FIELD_NUMBER = 1;
    private int owner_;
    public boolean hasOwner() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getOwner() {
      return owner_;
    }
    
    // required int32 count = 2;
    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getCount() {
      return count_;
    }
    
    private void initFields() {
      owner_ = 0;
      count_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasOwner()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, owner_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, count_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, owner_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.UnitInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.UnitInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.UnitInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.UnitInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.UnitInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_UnitInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_UnitInfo_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.UnitInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        owner_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.UnitInfo.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.UnitInfo getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.UnitInfo.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.UnitInfo build() {
        wormhole.game.network.GameProto.UnitInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.UnitInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.UnitInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.UnitInfo buildPartial() {
        wormhole.game.network.GameProto.UnitInfo result = new wormhole.game.network.GameProto.UnitInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.owner_ = owner_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.UnitInfo) {
          return mergeFrom((wormhole.game.network.GameProto.UnitInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.UnitInfo other) {
        if (other == wormhole.game.network.GameProto.UnitInfo.getDefaultInstance()) return this;
        if (other.hasOwner()) {
          setOwner(other.getOwner());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasOwner()) {
          
          return false;
        }
        if (!hasCount()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              owner_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 owner = 1;
      private int owner_ ;
      public boolean hasOwner() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getOwner() {
        return owner_;
      }
      public Builder setOwner(int value) {
        bitField0_ |= 0x00000001;
        owner_ = value;
        onChanged();
        return this;
      }
      public Builder clearOwner() {
        bitField0_ = (bitField0_ & ~0x00000001);
        owner_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 count = 2;
      private int count_ ;
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getCount() {
        return count_;
      }
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        onChanged();
        return this;
      }
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.UnitInfo)
    }
    
    static {
      defaultInstance = new UnitInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.UnitInfo)
  }
  
  public interface PlayerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 id = 1;
    boolean hasId();
    int getId();
    
    // required int32 color = 2;
    boolean hasColor();
    int getColor();
  }
  public static final class Player extends
      com.google.protobuf.GeneratedMessage
      implements PlayerOrBuilder {
    // Use Player.newBuilder() to construct.
    private Player(Builder builder) {
      super(builder);
    }
    private Player(boolean noInit) {}
    
    private static final Player defaultInstance;
    public static Player getDefaultInstance() {
      return defaultInstance;
    }
    
    public Player getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_Player_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_Player_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // required int32 color = 2;
    public static final int COLOR_FIELD_NUMBER = 2;
    private int color_;
    public boolean hasColor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getColor() {
      return color_;
    }
    
    private void initFields() {
      id_ = 0;
      color_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, color_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, color_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.Player parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.Player parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.Player parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.Player parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.Player parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.Player parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.Player parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.Player parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.Player parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.Player parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.Player prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.PlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_Player_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_Player_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.Player.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.Player.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.Player getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.Player.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.Player build() {
        wormhole.game.network.GameProto.Player result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.Player buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.Player result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.Player buildPartial() {
        wormhole.game.network.GameProto.Player result = new wormhole.game.network.GameProto.Player(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.color_ = color_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.Player) {
          return mergeFrom((wormhole.game.network.GameProto.Player)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.Player other) {
        if (other == wormhole.game.network.GameProto.Player.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasColor()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              color_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 color = 2;
      private int color_ ;
      public boolean hasColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getColor() {
        return color_;
      }
      public Builder setColor(int value) {
        bitField0_ |= 0x00000002;
        color_ = value;
        onChanged();
        return this;
      }
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        color_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.Player)
    }
    
    static {
      defaultInstance = new Player(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.Player)
  }
  
  public interface AttackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 fromX = 1;
    boolean hasFromX();
    int getFromX();
    
    // required int32 fromY = 2;
    boolean hasFromY();
    int getFromY();
    
    // required int32 toX = 3;
    boolean hasToX();
    int getToX();
    
    // required int32 toY = 4;
    boolean hasToY();
    int getToY();
  }
  public static final class Attack extends
      com.google.protobuf.GeneratedMessage
      implements AttackOrBuilder {
    // Use Attack.newBuilder() to construct.
    private Attack(Builder builder) {
      super(builder);
    }
    private Attack(boolean noInit) {}
    
    private static final Attack defaultInstance;
    public static Attack getDefaultInstance() {
      return defaultInstance;
    }
    
    public Attack getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_Attack_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_Attack_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 fromX = 1;
    public static final int FROMX_FIELD_NUMBER = 1;
    private int fromX_;
    public boolean hasFromX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getFromX() {
      return fromX_;
    }
    
    // required int32 fromY = 2;
    public static final int FROMY_FIELD_NUMBER = 2;
    private int fromY_;
    public boolean hasFromY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getFromY() {
      return fromY_;
    }
    
    // required int32 toX = 3;
    public static final int TOX_FIELD_NUMBER = 3;
    private int toX_;
    public boolean hasToX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getToX() {
      return toX_;
    }
    
    // required int32 toY = 4;
    public static final int TOY_FIELD_NUMBER = 4;
    private int toY_;
    public boolean hasToY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getToY() {
      return toY_;
    }
    
    private void initFields() {
      fromX_ = 0;
      fromY_ = 0;
      toX_ = 0;
      toY_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasFromX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFromY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fromX_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fromY_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, toX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, toY_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fromX_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fromY_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, toX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, toY_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.Attack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.Attack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.Attack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.Attack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.Attack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.Attack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.Attack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.Attack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.Attack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.Attack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.Attack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.AttackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_Attack_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_Attack_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.Attack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        fromX_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fromY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        toX_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        toY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.Attack.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.Attack getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.Attack.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.Attack build() {
        wormhole.game.network.GameProto.Attack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.Attack buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.Attack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.Attack buildPartial() {
        wormhole.game.network.GameProto.Attack result = new wormhole.game.network.GameProto.Attack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromX_ = fromX_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fromY_ = fromY_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.toX_ = toX_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.toY_ = toY_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.Attack) {
          return mergeFrom((wormhole.game.network.GameProto.Attack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.Attack other) {
        if (other == wormhole.game.network.GameProto.Attack.getDefaultInstance()) return this;
        if (other.hasFromX()) {
          setFromX(other.getFromX());
        }
        if (other.hasFromY()) {
          setFromY(other.getFromY());
        }
        if (other.hasToX()) {
          setToX(other.getToX());
        }
        if (other.hasToY()) {
          setToY(other.getToY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasFromX()) {
          
          return false;
        }
        if (!hasFromY()) {
          
          return false;
        }
        if (!hasToX()) {
          
          return false;
        }
        if (!hasToY()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromX_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fromY_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              toX_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              toY_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 fromX = 1;
      private int fromX_ ;
      public boolean hasFromX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getFromX() {
        return fromX_;
      }
      public Builder setFromX(int value) {
        bitField0_ |= 0x00000001;
        fromX_ = value;
        onChanged();
        return this;
      }
      public Builder clearFromX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromX_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 fromY = 2;
      private int fromY_ ;
      public boolean hasFromY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getFromY() {
        return fromY_;
      }
      public Builder setFromY(int value) {
        bitField0_ |= 0x00000002;
        fromY_ = value;
        onChanged();
        return this;
      }
      public Builder clearFromY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fromY_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 toX = 3;
      private int toX_ ;
      public boolean hasToX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getToX() {
        return toX_;
      }
      public Builder setToX(int value) {
        bitField0_ |= 0x00000004;
        toX_ = value;
        onChanged();
        return this;
      }
      public Builder clearToX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        toX_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 toY = 4;
      private int toY_ ;
      public boolean hasToY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getToY() {
        return toY_;
      }
      public Builder setToY(int value) {
        bitField0_ |= 0x00000008;
        toY_ = value;
        onChanged();
        return this;
      }
      public Builder clearToY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        toY_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.Attack)
    }
    
    static {
      defaultInstance = new Attack(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.Attack)
  }
  
  public interface UnitArrivalOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 x = 1;
    boolean hasX();
    int getX();
    
    // required int32 y = 2;
    boolean hasY();
    int getY();
    
    // required .wormhole.UnitInfo arrived = 3;
    boolean hasArrived();
    wormhole.game.network.GameProto.UnitInfo getArrived();
    wormhole.game.network.GameProto.UnitInfoOrBuilder getArrivedOrBuilder();
  }
  public static final class UnitArrival extends
      com.google.protobuf.GeneratedMessage
      implements UnitArrivalOrBuilder {
    // Use UnitArrival.newBuilder() to construct.
    private UnitArrival(Builder builder) {
      super(builder);
    }
    private UnitArrival(boolean noInit) {}
    
    private static final UnitArrival defaultInstance;
    public static UnitArrival getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnitArrival getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_UnitArrival_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_UnitArrival_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getX() {
      return x_;
    }
    
    // required int32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getY() {
      return y_;
    }
    
    // required .wormhole.UnitInfo arrived = 3;
    public static final int ARRIVED_FIELD_NUMBER = 3;
    private wormhole.game.network.GameProto.UnitInfo arrived_;
    public boolean hasArrived() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public wormhole.game.network.GameProto.UnitInfo getArrived() {
      return arrived_;
    }
    public wormhole.game.network.GameProto.UnitInfoOrBuilder getArrivedOrBuilder() {
      return arrived_;
    }
    
    private void initFields() {
      x_ = 0;
      y_ = 0;
      arrived_ = wormhole.game.network.GameProto.UnitInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasArrived()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getArrived().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, arrived_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, arrived_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.UnitArrival parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitArrival parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitArrival parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitArrival parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitArrival parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitArrival parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitArrival parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.UnitArrival parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.UnitArrival parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitArrival parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.UnitArrival prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.UnitArrivalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_UnitArrival_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_UnitArrival_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.UnitArrival.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getArrivedFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (arrivedBuilder_ == null) {
          arrived_ = wormhole.game.network.GameProto.UnitInfo.getDefaultInstance();
        } else {
          arrivedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.UnitArrival.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.UnitArrival getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.UnitArrival.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.UnitArrival build() {
        wormhole.game.network.GameProto.UnitArrival result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.UnitArrival buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.UnitArrival result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.UnitArrival buildPartial() {
        wormhole.game.network.GameProto.UnitArrival result = new wormhole.game.network.GameProto.UnitArrival(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (arrivedBuilder_ == null) {
          result.arrived_ = arrived_;
        } else {
          result.arrived_ = arrivedBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.UnitArrival) {
          return mergeFrom((wormhole.game.network.GameProto.UnitArrival)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.UnitArrival other) {
        if (other == wormhole.game.network.GameProto.UnitArrival.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasArrived()) {
          mergeArrived(other.getArrived());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasArrived()) {
          
          return false;
        }
        if (!getArrived().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
            case 26: {
              wormhole.game.network.GameProto.UnitInfo.Builder subBuilder = wormhole.game.network.GameProto.UnitInfo.newBuilder();
              if (hasArrived()) {
                subBuilder.mergeFrom(getArrived());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setArrived(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 x = 1;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 y = 2;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // required .wormhole.UnitInfo arrived = 3;
      private wormhole.game.network.GameProto.UnitInfo arrived_ = wormhole.game.network.GameProto.UnitInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          wormhole.game.network.GameProto.UnitInfo, wormhole.game.network.GameProto.UnitInfo.Builder, wormhole.game.network.GameProto.UnitInfoOrBuilder> arrivedBuilder_;
      public boolean hasArrived() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public wormhole.game.network.GameProto.UnitInfo getArrived() {
        if (arrivedBuilder_ == null) {
          return arrived_;
        } else {
          return arrivedBuilder_.getMessage();
        }
      }
      public Builder setArrived(wormhole.game.network.GameProto.UnitInfo value) {
        if (arrivedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          arrived_ = value;
          onChanged();
        } else {
          arrivedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setArrived(
          wormhole.game.network.GameProto.UnitInfo.Builder builderForValue) {
        if (arrivedBuilder_ == null) {
          arrived_ = builderForValue.build();
          onChanged();
        } else {
          arrivedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeArrived(wormhole.game.network.GameProto.UnitInfo value) {
        if (arrivedBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              arrived_ != wormhole.game.network.GameProto.UnitInfo.getDefaultInstance()) {
            arrived_ =
              wormhole.game.network.GameProto.UnitInfo.newBuilder(arrived_).mergeFrom(value).buildPartial();
          } else {
            arrived_ = value;
          }
          onChanged();
        } else {
          arrivedBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearArrived() {
        if (arrivedBuilder_ == null) {
          arrived_ = wormhole.game.network.GameProto.UnitInfo.getDefaultInstance();
          onChanged();
        } else {
          arrivedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public wormhole.game.network.GameProto.UnitInfo.Builder getArrivedBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getArrivedFieldBuilder().getBuilder();
      }
      public wormhole.game.network.GameProto.UnitInfoOrBuilder getArrivedOrBuilder() {
        if (arrivedBuilder_ != null) {
          return arrivedBuilder_.getMessageOrBuilder();
        } else {
          return arrived_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          wormhole.game.network.GameProto.UnitInfo, wormhole.game.network.GameProto.UnitInfo.Builder, wormhole.game.network.GameProto.UnitInfoOrBuilder> 
          getArrivedFieldBuilder() {
        if (arrivedBuilder_ == null) {
          arrivedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              wormhole.game.network.GameProto.UnitInfo, wormhole.game.network.GameProto.UnitInfo.Builder, wormhole.game.network.GameProto.UnitInfoOrBuilder>(
                  arrived_,
                  getParentForChildren(),
                  isClean());
          arrived_ = null;
        }
        return arrivedBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.UnitArrival)
    }
    
    static {
      defaultInstance = new UnitArrival(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.UnitArrival)
  }
  
  public interface AllUnitChangeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 x = 1;
    boolean hasX();
    int getX();
    
    // required int32 y = 2;
    boolean hasY();
    int getY();
    
    // repeated .wormhole.UnitInfo unit_info = 3;
    java.util.List<wormhole.game.network.GameProto.UnitInfo> 
        getUnitInfoList();
    wormhole.game.network.GameProto.UnitInfo getUnitInfo(int index);
    int getUnitInfoCount();
    java.util.List<? extends wormhole.game.network.GameProto.UnitInfoOrBuilder> 
        getUnitInfoOrBuilderList();
    wormhole.game.network.GameProto.UnitInfoOrBuilder getUnitInfoOrBuilder(
        int index);
  }
  public static final class AllUnitChange extends
      com.google.protobuf.GeneratedMessage
      implements AllUnitChangeOrBuilder {
    // Use AllUnitChange.newBuilder() to construct.
    private AllUnitChange(Builder builder) {
      super(builder);
    }
    private AllUnitChange(boolean noInit) {}
    
    private static final AllUnitChange defaultInstance;
    public static AllUnitChange getDefaultInstance() {
      return defaultInstance;
    }
    
    public AllUnitChange getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_AllUnitChange_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_AllUnitChange_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getX() {
      return x_;
    }
    
    // required int32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getY() {
      return y_;
    }
    
    // repeated .wormhole.UnitInfo unit_info = 3;
    public static final int UNIT_INFO_FIELD_NUMBER = 3;
    private java.util.List<wormhole.game.network.GameProto.UnitInfo> unitInfo_;
    public java.util.List<wormhole.game.network.GameProto.UnitInfo> getUnitInfoList() {
      return unitInfo_;
    }
    public java.util.List<? extends wormhole.game.network.GameProto.UnitInfoOrBuilder> 
        getUnitInfoOrBuilderList() {
      return unitInfo_;
    }
    public int getUnitInfoCount() {
      return unitInfo_.size();
    }
    public wormhole.game.network.GameProto.UnitInfo getUnitInfo(int index) {
      return unitInfo_.get(index);
    }
    public wormhole.game.network.GameProto.UnitInfoOrBuilder getUnitInfoOrBuilder(
        int index) {
      return unitInfo_.get(index);
    }
    
    private void initFields() {
      x_ = 0;
      y_ = 0;
      unitInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getUnitInfoCount(); i++) {
        if (!getUnitInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      for (int i = 0; i < unitInfo_.size(); i++) {
        output.writeMessage(3, unitInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      for (int i = 0; i < unitInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, unitInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.AllUnitChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.AllUnitChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.AllUnitChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.AllUnitChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.AllUnitChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.AllUnitChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.AllUnitChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.AllUnitChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.AllUnitChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.AllUnitChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.AllUnitChange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.AllUnitChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_AllUnitChange_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_AllUnitChange_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.AllUnitChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUnitInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (unitInfoBuilder_ == null) {
          unitInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          unitInfoBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.AllUnitChange.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.AllUnitChange getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.AllUnitChange.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.AllUnitChange build() {
        wormhole.game.network.GameProto.AllUnitChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.AllUnitChange buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.AllUnitChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.AllUnitChange buildPartial() {
        wormhole.game.network.GameProto.AllUnitChange result = new wormhole.game.network.GameProto.AllUnitChange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (unitInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            unitInfo_ = java.util.Collections.unmodifiableList(unitInfo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.unitInfo_ = unitInfo_;
        } else {
          result.unitInfo_ = unitInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.AllUnitChange) {
          return mergeFrom((wormhole.game.network.GameProto.AllUnitChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.AllUnitChange other) {
        if (other == wormhole.game.network.GameProto.AllUnitChange.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (unitInfoBuilder_ == null) {
          if (!other.unitInfo_.isEmpty()) {
            if (unitInfo_.isEmpty()) {
              unitInfo_ = other.unitInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureUnitInfoIsMutable();
              unitInfo_.addAll(other.unitInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.unitInfo_.isEmpty()) {
            if (unitInfoBuilder_.isEmpty()) {
              unitInfoBuilder_.dispose();
              unitInfoBuilder_ = null;
              unitInfo_ = other.unitInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              unitInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUnitInfoFieldBuilder() : null;
            } else {
              unitInfoBuilder_.addAllMessages(other.unitInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        for (int i = 0; i < getUnitInfoCount(); i++) {
          if (!getUnitInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
            case 26: {
              wormhole.game.network.GameProto.UnitInfo.Builder subBuilder = wormhole.game.network.GameProto.UnitInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addUnitInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 x = 1;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 y = 2;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .wormhole.UnitInfo unit_info = 3;
      private java.util.List<wormhole.game.network.GameProto.UnitInfo> unitInfo_ =
        java.util.Collections.emptyList();
      private void ensureUnitInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          unitInfo_ = new java.util.ArrayList<wormhole.game.network.GameProto.UnitInfo>(unitInfo_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.game.network.GameProto.UnitInfo, wormhole.game.network.GameProto.UnitInfo.Builder, wormhole.game.network.GameProto.UnitInfoOrBuilder> unitInfoBuilder_;
      
      public java.util.List<wormhole.game.network.GameProto.UnitInfo> getUnitInfoList() {
        if (unitInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(unitInfo_);
        } else {
          return unitInfoBuilder_.getMessageList();
        }
      }
      public int getUnitInfoCount() {
        if (unitInfoBuilder_ == null) {
          return unitInfo_.size();
        } else {
          return unitInfoBuilder_.getCount();
        }
      }
      public wormhole.game.network.GameProto.UnitInfo getUnitInfo(int index) {
        if (unitInfoBuilder_ == null) {
          return unitInfo_.get(index);
        } else {
          return unitInfoBuilder_.getMessage(index);
        }
      }
      public Builder setUnitInfo(
          int index, wormhole.game.network.GameProto.UnitInfo value) {
        if (unitInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitInfoIsMutable();
          unitInfo_.set(index, value);
          onChanged();
        } else {
          unitInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setUnitInfo(
          int index, wormhole.game.network.GameProto.UnitInfo.Builder builderForValue) {
        if (unitInfoBuilder_ == null) {
          ensureUnitInfoIsMutable();
          unitInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          unitInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addUnitInfo(wormhole.game.network.GameProto.UnitInfo value) {
        if (unitInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitInfoIsMutable();
          unitInfo_.add(value);
          onChanged();
        } else {
          unitInfoBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addUnitInfo(
          int index, wormhole.game.network.GameProto.UnitInfo value) {
        if (unitInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitInfoIsMutable();
          unitInfo_.add(index, value);
          onChanged();
        } else {
          unitInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addUnitInfo(
          wormhole.game.network.GameProto.UnitInfo.Builder builderForValue) {
        if (unitInfoBuilder_ == null) {
          ensureUnitInfoIsMutable();
          unitInfo_.add(builderForValue.build());
          onChanged();
        } else {
          unitInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addUnitInfo(
          int index, wormhole.game.network.GameProto.UnitInfo.Builder builderForValue) {
        if (unitInfoBuilder_ == null) {
          ensureUnitInfoIsMutable();
          unitInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          unitInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllUnitInfo(
          java.lang.Iterable<? extends wormhole.game.network.GameProto.UnitInfo> values) {
        if (unitInfoBuilder_ == null) {
          ensureUnitInfoIsMutable();
          super.addAll(values, unitInfo_);
          onChanged();
        } else {
          unitInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearUnitInfo() {
        if (unitInfoBuilder_ == null) {
          unitInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          unitInfoBuilder_.clear();
        }
        return this;
      }
      public Builder removeUnitInfo(int index) {
        if (unitInfoBuilder_ == null) {
          ensureUnitInfoIsMutable();
          unitInfo_.remove(index);
          onChanged();
        } else {
          unitInfoBuilder_.remove(index);
        }
        return this;
      }
      public wormhole.game.network.GameProto.UnitInfo.Builder getUnitInfoBuilder(
          int index) {
        return getUnitInfoFieldBuilder().getBuilder(index);
      }
      public wormhole.game.network.GameProto.UnitInfoOrBuilder getUnitInfoOrBuilder(
          int index) {
        if (unitInfoBuilder_ == null) {
          return unitInfo_.get(index);  } else {
          return unitInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends wormhole.game.network.GameProto.UnitInfoOrBuilder> 
           getUnitInfoOrBuilderList() {
        if (unitInfoBuilder_ != null) {
          return unitInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(unitInfo_);
        }
      }
      public wormhole.game.network.GameProto.UnitInfo.Builder addUnitInfoBuilder() {
        return getUnitInfoFieldBuilder().addBuilder(
            wormhole.game.network.GameProto.UnitInfo.getDefaultInstance());
      }
      public wormhole.game.network.GameProto.UnitInfo.Builder addUnitInfoBuilder(
          int index) {
        return getUnitInfoFieldBuilder().addBuilder(
            index, wormhole.game.network.GameProto.UnitInfo.getDefaultInstance());
      }
      public java.util.List<wormhole.game.network.GameProto.UnitInfo.Builder> 
           getUnitInfoBuilderList() {
        return getUnitInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.game.network.GameProto.UnitInfo, wormhole.game.network.GameProto.UnitInfo.Builder, wormhole.game.network.GameProto.UnitInfoOrBuilder> 
          getUnitInfoFieldBuilder() {
        if (unitInfoBuilder_ == null) {
          unitInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              wormhole.game.network.GameProto.UnitInfo, wormhole.game.network.GameProto.UnitInfo.Builder, wormhole.game.network.GameProto.UnitInfoOrBuilder>(
                  unitInfo_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          unitInfo_ = null;
        }
        return unitInfoBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.AllUnitChange)
    }
    
    static {
      defaultInstance = new AllUnitChange(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.AllUnitChange)
  }
  
  public interface OwnerChangeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 x = 1;
    boolean hasX();
    int getX();
    
    // required int32 y = 2;
    boolean hasY();
    int getY();
    
    // required int32 new_owner_id = 3;
    boolean hasNewOwnerId();
    int getNewOwnerId();
  }
  public static final class OwnerChange extends
      com.google.protobuf.GeneratedMessage
      implements OwnerChangeOrBuilder {
    // Use OwnerChange.newBuilder() to construct.
    private OwnerChange(Builder builder) {
      super(builder);
    }
    private OwnerChange(boolean noInit) {}
    
    private static final OwnerChange defaultInstance;
    public static OwnerChange getDefaultInstance() {
      return defaultInstance;
    }
    
    public OwnerChange getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_OwnerChange_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_OwnerChange_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getX() {
      return x_;
    }
    
    // required int32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getY() {
      return y_;
    }
    
    // required int32 new_owner_id = 3;
    public static final int NEW_OWNER_ID_FIELD_NUMBER = 3;
    private int newOwnerId_;
    public boolean hasNewOwnerId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getNewOwnerId() {
      return newOwnerId_;
    }
    
    private void initFields() {
      x_ = 0;
      y_ = 0;
      newOwnerId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNewOwnerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, newOwnerId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, newOwnerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.OwnerChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.OwnerChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.OwnerChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.OwnerChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.OwnerChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.OwnerChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.OwnerChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.OwnerChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.OwnerChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.OwnerChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.OwnerChange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.OwnerChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_OwnerChange_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_OwnerChange_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.OwnerChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        newOwnerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.OwnerChange.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.OwnerChange getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.OwnerChange.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.OwnerChange build() {
        wormhole.game.network.GameProto.OwnerChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.OwnerChange buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.OwnerChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.OwnerChange buildPartial() {
        wormhole.game.network.GameProto.OwnerChange result = new wormhole.game.network.GameProto.OwnerChange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.newOwnerId_ = newOwnerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.OwnerChange) {
          return mergeFrom((wormhole.game.network.GameProto.OwnerChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.OwnerChange other) {
        if (other == wormhole.game.network.GameProto.OwnerChange.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasNewOwnerId()) {
          setNewOwnerId(other.getNewOwnerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasNewOwnerId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              newOwnerId_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 x = 1;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 y = 2;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 new_owner_id = 3;
      private int newOwnerId_ ;
      public boolean hasNewOwnerId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getNewOwnerId() {
        return newOwnerId_;
      }
      public Builder setNewOwnerId(int value) {
        bitField0_ |= 0x00000004;
        newOwnerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearNewOwnerId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        newOwnerId_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.OwnerChange)
    }
    
    static {
      defaultInstance = new OwnerChange(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.OwnerChange)
  }
  
  public interface NewUnitGroupOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 id = 1;
    boolean hasId();
    int getId();
    
    // required int32 owner = 4;
    boolean hasOwner();
    int getOwner();
    
    // required int32 count = 5;
    boolean hasCount();
    int getCount();
    
    // required int32 x = 2;
    boolean hasX();
    int getX();
    
    // required int32 y = 3;
    boolean hasY();
    int getY();
  }
  public static final class NewUnitGroup extends
      com.google.protobuf.GeneratedMessage
      implements NewUnitGroupOrBuilder {
    // Use NewUnitGroup.newBuilder() to construct.
    private NewUnitGroup(Builder builder) {
      super(builder);
    }
    private NewUnitGroup(boolean noInit) {}
    
    private static final NewUnitGroup defaultInstance;
    public static NewUnitGroup getDefaultInstance() {
      return defaultInstance;
    }
    
    public NewUnitGroup getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_NewUnitGroup_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_NewUnitGroup_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // required int32 owner = 4;
    public static final int OWNER_FIELD_NUMBER = 4;
    private int owner_;
    public boolean hasOwner() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getOwner() {
      return owner_;
    }
    
    // required int32 count = 5;
    public static final int COUNT_FIELD_NUMBER = 5;
    private int count_;
    public boolean hasCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getCount() {
      return count_;
    }
    
    // required int32 x = 2;
    public static final int X_FIELD_NUMBER = 2;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getX() {
      return x_;
    }
    
    // required int32 y = 3;
    public static final int Y_FIELD_NUMBER = 3;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getY() {
      return y_;
    }
    
    private void initFields() {
      id_ = 0;
      owner_ = 0;
      count_ = 0;
      x_ = 0;
      y_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOwner()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(2, x_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(3, y_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, owner_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, count_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, x_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, y_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, owner_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.NewUnitGroup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.NewUnitGroup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.NewUnitGroup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.NewUnitGroup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.NewUnitGroup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.NewUnitGroup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.NewUnitGroup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.NewUnitGroup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.NewUnitGroup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.NewUnitGroup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.NewUnitGroup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.NewUnitGroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_NewUnitGroup_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_NewUnitGroup_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.NewUnitGroup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        owner_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.NewUnitGroup.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.NewUnitGroup getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.NewUnitGroup.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.NewUnitGroup build() {
        wormhole.game.network.GameProto.NewUnitGroup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.NewUnitGroup buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.NewUnitGroup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.NewUnitGroup buildPartial() {
        wormhole.game.network.GameProto.NewUnitGroup result = new wormhole.game.network.GameProto.NewUnitGroup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.owner_ = owner_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.NewUnitGroup) {
          return mergeFrom((wormhole.game.network.GameProto.NewUnitGroup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.NewUnitGroup other) {
        if (other == wormhole.game.network.GameProto.NewUnitGroup.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasOwner()) {
          setOwner(other.getOwner());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasOwner()) {
          
          return false;
        }
        if (!hasCount()) {
          
          return false;
        }
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000008;
              x_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000010;
              y_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              owner_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              count_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 owner = 4;
      private int owner_ ;
      public boolean hasOwner() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getOwner() {
        return owner_;
      }
      public Builder setOwner(int value) {
        bitField0_ |= 0x00000002;
        owner_ = value;
        onChanged();
        return this;
      }
      public Builder clearOwner() {
        bitField0_ = (bitField0_ & ~0x00000002);
        owner_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 count = 5;
      private int count_ ;
      public boolean hasCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getCount() {
        return count_;
      }
      public Builder setCount(int value) {
        bitField0_ |= 0x00000004;
        count_ = value;
        onChanged();
        return this;
      }
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        count_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 x = 2;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000008;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000008);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 y = 3;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000010;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000010);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.NewUnitGroup)
    }
    
    static {
      defaultInstance = new NewUnitGroup(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.NewUnitGroup)
  }
  
  public interface UnitGroupPositionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional int32 x = 2;
    boolean hasX();
    int getX();
    
    // optional int32 y = 3;
    boolean hasY();
    int getY();
    
    // optional bool complete = 4 [default = false];
    boolean hasComplete();
    boolean getComplete();
  }
  public static final class UnitGroupPosition extends
      com.google.protobuf.GeneratedMessage
      implements UnitGroupPositionOrBuilder {
    // Use UnitGroupPosition.newBuilder() to construct.
    private UnitGroupPosition(Builder builder) {
      super(builder);
    }
    private UnitGroupPosition(boolean noInit) {}
    
    private static final UnitGroupPosition defaultInstance;
    public static UnitGroupPosition getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnitGroupPosition getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.game.network.GameProto.internal_static_wormhole_UnitGroupPosition_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.game.network.GameProto.internal_static_wormhole_UnitGroupPosition_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional int32 x = 2;
    public static final int X_FIELD_NUMBER = 2;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getX() {
      return x_;
    }
    
    // optional int32 y = 3;
    public static final int Y_FIELD_NUMBER = 3;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getY() {
      return y_;
    }
    
    // optional bool complete = 4 [default = false];
    public static final int COMPLETE_FIELD_NUMBER = 4;
    private boolean complete_;
    public boolean hasComplete() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getComplete() {
      return complete_;
    }
    
    private void initFields() {
      id_ = 0;
      x_ = 0;
      y_ = 0;
      complete_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, x_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, y_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, complete_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, x_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, y_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, complete_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.game.network.GameProto.UnitGroupPosition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitGroupPosition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitGroupPosition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitGroupPosition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitGroupPosition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitGroupPosition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitGroupPosition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.UnitGroupPosition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.game.network.GameProto.UnitGroupPosition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.game.network.GameProto.UnitGroupPosition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.game.network.GameProto.UnitGroupPosition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.game.network.GameProto.UnitGroupPositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.game.network.GameProto.internal_static_wormhole_UnitGroupPosition_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.game.network.GameProto.internal_static_wormhole_UnitGroupPosition_fieldAccessorTable;
      }
      
      // Construct using wormhole.game.network.GameProto.UnitGroupPosition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        complete_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.game.network.GameProto.UnitGroupPosition.getDescriptor();
      }
      
      public wormhole.game.network.GameProto.UnitGroupPosition getDefaultInstanceForType() {
        return wormhole.game.network.GameProto.UnitGroupPosition.getDefaultInstance();
      }
      
      public wormhole.game.network.GameProto.UnitGroupPosition build() {
        wormhole.game.network.GameProto.UnitGroupPosition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.game.network.GameProto.UnitGroupPosition buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.game.network.GameProto.UnitGroupPosition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.game.network.GameProto.UnitGroupPosition buildPartial() {
        wormhole.game.network.GameProto.UnitGroupPosition result = new wormhole.game.network.GameProto.UnitGroupPosition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.complete_ = complete_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.game.network.GameProto.UnitGroupPosition) {
          return mergeFrom((wormhole.game.network.GameProto.UnitGroupPosition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.game.network.GameProto.UnitGroupPosition other) {
        if (other == wormhole.game.network.GameProto.UnitGroupPosition.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasComplete()) {
          setComplete(other.getComplete());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              x_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              y_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              complete_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 x = 2;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000002;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 y = 3;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000004;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool complete = 4 [default = false];
      private boolean complete_ ;
      public boolean hasComplete() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getComplete() {
        return complete_;
      }
      public Builder setComplete(boolean value) {
        bitField0_ |= 0x00000008;
        complete_ = value;
        onChanged();
        return this;
      }
      public Builder clearComplete() {
        bitField0_ = (bitField0_ & ~0x00000008);
        complete_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.UnitGroupPosition)
    }
    
    static {
      defaultInstance = new UnitGroupPosition(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.UnitGroupPosition)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_IncomingMessageType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_IncomingMessageType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_Map_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_Map_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_MapGridSpace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_MapGridSpace_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_UnitInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_UnitInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_Player_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_Attack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_Attack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_UnitArrival_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_UnitArrival_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_AllUnitChange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_AllUnitChange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_OwnerChange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_OwnerChange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_NewUnitGroup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_NewUnitGroup_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_UnitGroupPosition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_UnitGroupPosition_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ngame.proto\022\010wormhole\":\n\023IncomingMessag" +
      "eType\022#\n\004type\030\001 \002(\0162\025.wormhole.MessageTy" +
      "pe\"m\n\003Map\022\r\n\005width\030\003 \002(\005\022\016\n\006height\030\004 \002(\005" +
      "\022%\n\005space\030\001 \003(\0132\026.wormhole.MapGridSpace\022" +
      " \n\006player\030\002 \003(\0132\020.wormhole.Player\"\204\001\n\014Ma" +
      "pGridSpace\022\t\n\001x\030\004 \002(\005\022\t\n\001y\030\005 \002(\005\022\024\n\014prod" +
      "uctivity\030\001 \002(\005\022\017\n\007defense\030\002 \002(\005\022\020\n\010owner" +
      "_id\030\006 \001(\005\022%\n\tunit_info\030\007 \003(\0132\022.wormhole." +
      "UnitInfo\"(\n\010UnitInfo\022\r\n\005owner\030\001 \002(\005\022\r\n\005c" +
      "ount\030\002 \002(\005\"#\n\006Player\022\n\n\002id\030\001 \002(\005\022\r\n\005colo",
      "r\030\002 \002(\005\"@\n\006Attack\022\r\n\005fromX\030\001 \002(\005\022\r\n\005from" +
      "Y\030\002 \002(\005\022\013\n\003toX\030\003 \002(\005\022\013\n\003toY\030\004 \002(\005\"H\n\013Uni" +
      "tArrival\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\022#\n\007arrive" +
      "d\030\003 \002(\0132\022.wormhole.UnitInfo\"L\n\rAllUnitCh" +
      "ange\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\022%\n\tunit_info\030" +
      "\003 \003(\0132\022.wormhole.UnitInfo\"9\n\013OwnerChange" +
      "\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\022\024\n\014new_owner_id\030\003" +
      " \002(\005\"N\n\014NewUnitGroup\022\n\n\002id\030\001 \002(\005\022\r\n\005owne" +
      "r\030\004 \002(\005\022\r\n\005count\030\005 \002(\005\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003" +
      " \002(\005\"N\n\021UnitGroupPosition\022\n\n\002id\030\001 \002(\005\022\t\n",
      "\001x\030\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\027\n\010complete\030\004 \001(\010:\005f" +
      "alse*\277\001\n\013MessageType\022\007\n\003MAP\020\000\022\n\n\006ATTACK\020" +
      "\001\022\020\n\014UNIT_ARRIVAL\020\002\022\023\n\017ALL_UNIT_CHANGE\020\003" +
      "\022\020\n\014OWNER_CHANGE\020\004\022\016\n\nDISCONNECT\020\005\022\024\n\020SE" +
      "ND_PLAYER_DATA\020\006\022\017\n\013PLAYER_DATA\020\007\022\022\n\016NEW" +
      "_UNIT_GROUP\020\010\022\027\n\023UNIT_GROUP_POSITION\020\tB\"" +
      "\n\025wormhole.game.networkB\tGameProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_wormhole_IncomingMessageType_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_wormhole_IncomingMessageType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_IncomingMessageType_descriptor,
              new java.lang.String[] { "Type", },
              wormhole.game.network.GameProto.IncomingMessageType.class,
              wormhole.game.network.GameProto.IncomingMessageType.Builder.class);
          internal_static_wormhole_Map_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_wormhole_Map_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_Map_descriptor,
              new java.lang.String[] { "Width", "Height", "Space", "Player", },
              wormhole.game.network.GameProto.Map.class,
              wormhole.game.network.GameProto.Map.Builder.class);
          internal_static_wormhole_MapGridSpace_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_wormhole_MapGridSpace_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_MapGridSpace_descriptor,
              new java.lang.String[] { "X", "Y", "Productivity", "Defense", "OwnerId", "UnitInfo", },
              wormhole.game.network.GameProto.MapGridSpace.class,
              wormhole.game.network.GameProto.MapGridSpace.Builder.class);
          internal_static_wormhole_UnitInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_wormhole_UnitInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_UnitInfo_descriptor,
              new java.lang.String[] { "Owner", "Count", },
              wormhole.game.network.GameProto.UnitInfo.class,
              wormhole.game.network.GameProto.UnitInfo.Builder.class);
          internal_static_wormhole_Player_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_wormhole_Player_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_Player_descriptor,
              new java.lang.String[] { "Id", "Color", },
              wormhole.game.network.GameProto.Player.class,
              wormhole.game.network.GameProto.Player.Builder.class);
          internal_static_wormhole_Attack_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_wormhole_Attack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_Attack_descriptor,
              new java.lang.String[] { "FromX", "FromY", "ToX", "ToY", },
              wormhole.game.network.GameProto.Attack.class,
              wormhole.game.network.GameProto.Attack.Builder.class);
          internal_static_wormhole_UnitArrival_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_wormhole_UnitArrival_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_UnitArrival_descriptor,
              new java.lang.String[] { "X", "Y", "Arrived", },
              wormhole.game.network.GameProto.UnitArrival.class,
              wormhole.game.network.GameProto.UnitArrival.Builder.class);
          internal_static_wormhole_AllUnitChange_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_wormhole_AllUnitChange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_AllUnitChange_descriptor,
              new java.lang.String[] { "X", "Y", "UnitInfo", },
              wormhole.game.network.GameProto.AllUnitChange.class,
              wormhole.game.network.GameProto.AllUnitChange.Builder.class);
          internal_static_wormhole_OwnerChange_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_wormhole_OwnerChange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_OwnerChange_descriptor,
              new java.lang.String[] { "X", "Y", "NewOwnerId", },
              wormhole.game.network.GameProto.OwnerChange.class,
              wormhole.game.network.GameProto.OwnerChange.Builder.class);
          internal_static_wormhole_NewUnitGroup_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_wormhole_NewUnitGroup_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_NewUnitGroup_descriptor,
              new java.lang.String[] { "Id", "Owner", "Count", "X", "Y", },
              wormhole.game.network.GameProto.NewUnitGroup.class,
              wormhole.game.network.GameProto.NewUnitGroup.Builder.class);
          internal_static_wormhole_UnitGroupPosition_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_wormhole_UnitGroupPosition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_UnitGroupPosition_descriptor,
              new java.lang.String[] { "Id", "X", "Y", "Complete", },
              wormhole.game.network.GameProto.UnitGroupPosition.class,
              wormhole.game.network.GameProto.UnitGroupPosition.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
