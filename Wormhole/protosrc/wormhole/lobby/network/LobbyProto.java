// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lobby.proto

package wormhole.lobby.network;

public final class LobbyProto {
  private LobbyProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    NEW_PERSON(0, 0),
    LOST_PERSON(1, 1),
    PERSON_SET_INFO(2, 2),
    START(3, 3),
    START_CONFIRM(4, 4),
    CHANGE_INFO(5, 5),
    DISCONNECT(6, 6),
    COLOR_AVAILABLE(7, 7),
    COLOR_TAKEN(8, 8),
    ;
    
    public static final int NEW_PERSON_VALUE = 0;
    public static final int LOST_PERSON_VALUE = 1;
    public static final int PERSON_SET_INFO_VALUE = 2;
    public static final int START_VALUE = 3;
    public static final int START_CONFIRM_VALUE = 4;
    public static final int CHANGE_INFO_VALUE = 5;
    public static final int DISCONNECT_VALUE = 6;
    public static final int COLOR_AVAILABLE_VALUE = 7;
    public static final int COLOR_TAKEN_VALUE = 8;
    
    
    public final int getNumber() { return value; }
    
    public static MessageType valueOf(int value) {
      switch (value) {
        case 0: return NEW_PERSON;
        case 1: return LOST_PERSON;
        case 2: return PERSON_SET_INFO;
        case 3: return START;
        case 4: return START_CONFIRM;
        case 5: return CHANGE_INFO;
        case 6: return DISCONNECT;
        case 7: return COLOR_AVAILABLE;
        case 8: return COLOR_TAKEN;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return wormhole.lobby.network.LobbyProto.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final MessageType[] VALUES = {
      NEW_PERSON, LOST_PERSON, PERSON_SET_INFO, START, START_CONFIRM, CHANGE_INFO, DISCONNECT, COLOR_AVAILABLE, COLOR_TAKEN, 
    };
    
    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private MessageType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:wormhole.MessageType)
  }
  
  public interface LobbyMessageTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .wormhole.MessageType type = 1;
    boolean hasType();
    wormhole.lobby.network.LobbyProto.MessageType getType();
  }
  public static final class LobbyMessageType extends
      com.google.protobuf.GeneratedMessage
      implements LobbyMessageTypeOrBuilder {
    // Use LobbyMessageType.newBuilder() to construct.
    private LobbyMessageType(Builder builder) {
      super(builder);
    }
    private LobbyMessageType(boolean noInit) {}
    
    private static final LobbyMessageType defaultInstance;
    public static LobbyMessageType getDefaultInstance() {
      return defaultInstance;
    }
    
    public LobbyMessageType getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.lobby.network.LobbyProto.internal_static_wormhole_LobbyMessageType_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.lobby.network.LobbyProto.internal_static_wormhole_LobbyMessageType_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .wormhole.MessageType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private wormhole.lobby.network.LobbyProto.MessageType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public wormhole.lobby.network.LobbyProto.MessageType getType() {
      return type_;
    }
    
    private void initFields() {
      type_ = wormhole.lobby.network.LobbyProto.MessageType.NEW_PERSON;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.lobby.network.LobbyProto.LobbyMessageType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.LobbyMessageType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.LobbyMessageType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.LobbyMessageType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.LobbyMessageType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.LobbyMessageType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.LobbyMessageType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.lobby.network.LobbyProto.LobbyMessageType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.lobby.network.LobbyProto.LobbyMessageType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.LobbyMessageType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.lobby.network.LobbyProto.LobbyMessageType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.lobby.network.LobbyProto.LobbyMessageTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.lobby.network.LobbyProto.internal_static_wormhole_LobbyMessageType_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.lobby.network.LobbyProto.internal_static_wormhole_LobbyMessageType_fieldAccessorTable;
      }
      
      // Construct using wormhole.lobby.network.LobbyProto.LobbyMessageType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = wormhole.lobby.network.LobbyProto.MessageType.NEW_PERSON;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.lobby.network.LobbyProto.LobbyMessageType.getDescriptor();
      }
      
      public wormhole.lobby.network.LobbyProto.LobbyMessageType getDefaultInstanceForType() {
        return wormhole.lobby.network.LobbyProto.LobbyMessageType.getDefaultInstance();
      }
      
      public wormhole.lobby.network.LobbyProto.LobbyMessageType build() {
        wormhole.lobby.network.LobbyProto.LobbyMessageType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.lobby.network.LobbyProto.LobbyMessageType buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.lobby.network.LobbyProto.LobbyMessageType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.lobby.network.LobbyProto.LobbyMessageType buildPartial() {
        wormhole.lobby.network.LobbyProto.LobbyMessageType result = new wormhole.lobby.network.LobbyProto.LobbyMessageType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.lobby.network.LobbyProto.LobbyMessageType) {
          return mergeFrom((wormhole.lobby.network.LobbyProto.LobbyMessageType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.lobby.network.LobbyProto.LobbyMessageType other) {
        if (other == wormhole.lobby.network.LobbyProto.LobbyMessageType.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              wormhole.lobby.network.LobbyProto.MessageType value = wormhole.lobby.network.LobbyProto.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .wormhole.MessageType type = 1;
      private wormhole.lobby.network.LobbyProto.MessageType type_ = wormhole.lobby.network.LobbyProto.MessageType.NEW_PERSON;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public wormhole.lobby.network.LobbyProto.MessageType getType() {
        return type_;
      }
      public Builder setType(wormhole.lobby.network.LobbyProto.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = wormhole.lobby.network.LobbyProto.MessageType.NEW_PERSON;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.LobbyMessageType)
    }
    
    static {
      defaultInstance = new LobbyMessageType(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.LobbyMessageType)
  }
  
  public interface PersonSetInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .wormhole.PersonInfo info = 1;
    java.util.List<wormhole.lobby.network.LobbyProto.PersonInfo> 
        getInfoList();
    wormhole.lobby.network.LobbyProto.PersonInfo getInfo(int index);
    int getInfoCount();
    java.util.List<? extends wormhole.lobby.network.LobbyProto.PersonInfoOrBuilder> 
        getInfoOrBuilderList();
    wormhole.lobby.network.LobbyProto.PersonInfoOrBuilder getInfoOrBuilder(
        int index);
  }
  public static final class PersonSetInfo extends
      com.google.protobuf.GeneratedMessage
      implements PersonSetInfoOrBuilder {
    // Use PersonSetInfo.newBuilder() to construct.
    private PersonSetInfo(Builder builder) {
      super(builder);
    }
    private PersonSetInfo(boolean noInit) {}
    
    private static final PersonSetInfo defaultInstance;
    public static PersonSetInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PersonSetInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PersonSetInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PersonSetInfo_fieldAccessorTable;
    }
    
    // repeated .wormhole.PersonInfo info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private java.util.List<wormhole.lobby.network.LobbyProto.PersonInfo> info_;
    public java.util.List<wormhole.lobby.network.LobbyProto.PersonInfo> getInfoList() {
      return info_;
    }
    public java.util.List<? extends wormhole.lobby.network.LobbyProto.PersonInfoOrBuilder> 
        getInfoOrBuilderList() {
      return info_;
    }
    public int getInfoCount() {
      return info_.size();
    }
    public wormhole.lobby.network.LobbyProto.PersonInfo getInfo(int index) {
      return info_.get(index);
    }
    public wormhole.lobby.network.LobbyProto.PersonInfoOrBuilder getInfoOrBuilder(
        int index) {
      return info_.get(index);
    }
    
    private void initFields() {
      info_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getInfoCount(); i++) {
        if (!getInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < info_.size(); i++) {
        output.writeMessage(1, info_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < info_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, info_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.lobby.network.LobbyProto.PersonSetInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonSetInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonSetInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonSetInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonSetInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonSetInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonSetInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.lobby.network.LobbyProto.PersonSetInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.lobby.network.LobbyProto.PersonSetInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonSetInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.lobby.network.LobbyProto.PersonSetInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.lobby.network.LobbyProto.PersonSetInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PersonSetInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PersonSetInfo_fieldAccessorTable;
      }
      
      // Construct using wormhole.lobby.network.LobbyProto.PersonSetInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (infoBuilder_ == null) {
          info_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          infoBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.lobby.network.LobbyProto.PersonSetInfo.getDescriptor();
      }
      
      public wormhole.lobby.network.LobbyProto.PersonSetInfo getDefaultInstanceForType() {
        return wormhole.lobby.network.LobbyProto.PersonSetInfo.getDefaultInstance();
      }
      
      public wormhole.lobby.network.LobbyProto.PersonSetInfo build() {
        wormhole.lobby.network.LobbyProto.PersonSetInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.lobby.network.LobbyProto.PersonSetInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.lobby.network.LobbyProto.PersonSetInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.lobby.network.LobbyProto.PersonSetInfo buildPartial() {
        wormhole.lobby.network.LobbyProto.PersonSetInfo result = new wormhole.lobby.network.LobbyProto.PersonSetInfo(this);
        int from_bitField0_ = bitField0_;
        if (infoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            info_ = java.util.Collections.unmodifiableList(info_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.lobby.network.LobbyProto.PersonSetInfo) {
          return mergeFrom((wormhole.lobby.network.LobbyProto.PersonSetInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.lobby.network.LobbyProto.PersonSetInfo other) {
        if (other == wormhole.lobby.network.LobbyProto.PersonSetInfo.getDefaultInstance()) return this;
        if (infoBuilder_ == null) {
          if (!other.info_.isEmpty()) {
            if (info_.isEmpty()) {
              info_ = other.info_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInfoIsMutable();
              info_.addAll(other.info_);
            }
            onChanged();
          }
        } else {
          if (!other.info_.isEmpty()) {
            if (infoBuilder_.isEmpty()) {
              infoBuilder_.dispose();
              infoBuilder_ = null;
              info_ = other.info_;
              bitField0_ = (bitField0_ & ~0x00000001);
              infoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInfoFieldBuilder() : null;
            } else {
              infoBuilder_.addAllMessages(other.info_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getInfoCount(); i++) {
          if (!getInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              wormhole.lobby.network.LobbyProto.PersonInfo.Builder subBuilder = wormhole.lobby.network.LobbyProto.PersonInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .wormhole.PersonInfo info = 1;
      private java.util.List<wormhole.lobby.network.LobbyProto.PersonInfo> info_ =
        java.util.Collections.emptyList();
      private void ensureInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          info_ = new java.util.ArrayList<wormhole.lobby.network.LobbyProto.PersonInfo>(info_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.lobby.network.LobbyProto.PersonInfo, wormhole.lobby.network.LobbyProto.PersonInfo.Builder, wormhole.lobby.network.LobbyProto.PersonInfoOrBuilder> infoBuilder_;
      
      public java.util.List<wormhole.lobby.network.LobbyProto.PersonInfo> getInfoList() {
        if (infoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(info_);
        } else {
          return infoBuilder_.getMessageList();
        }
      }
      public int getInfoCount() {
        if (infoBuilder_ == null) {
          return info_.size();
        } else {
          return infoBuilder_.getCount();
        }
      }
      public wormhole.lobby.network.LobbyProto.PersonInfo getInfo(int index) {
        if (infoBuilder_ == null) {
          return info_.get(index);
        } else {
          return infoBuilder_.getMessage(index);
        }
      }
      public Builder setInfo(
          int index, wormhole.lobby.network.LobbyProto.PersonInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.set(index, value);
          onChanged();
        } else {
          infoBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setInfo(
          int index, wormhole.lobby.network.LobbyProto.PersonInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.set(index, builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addInfo(wormhole.lobby.network.LobbyProto.PersonInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.add(value);
          onChanged();
        } else {
          infoBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addInfo(
          int index, wormhole.lobby.network.LobbyProto.PersonInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.add(index, value);
          onChanged();
        } else {
          infoBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addInfo(
          wormhole.lobby.network.LobbyProto.PersonInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.add(builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addInfo(
          int index, wormhole.lobby.network.LobbyProto.PersonInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.add(index, builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllInfo(
          java.lang.Iterable<? extends wormhole.lobby.network.LobbyProto.PersonInfo> values) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          super.addAll(values, info_);
          onChanged();
        } else {
          infoBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          infoBuilder_.clear();
        }
        return this;
      }
      public Builder removeInfo(int index) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.remove(index);
          onChanged();
        } else {
          infoBuilder_.remove(index);
        }
        return this;
      }
      public wormhole.lobby.network.LobbyProto.PersonInfo.Builder getInfoBuilder(
          int index) {
        return getInfoFieldBuilder().getBuilder(index);
      }
      public wormhole.lobby.network.LobbyProto.PersonInfoOrBuilder getInfoOrBuilder(
          int index) {
        if (infoBuilder_ == null) {
          return info_.get(index);  } else {
          return infoBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends wormhole.lobby.network.LobbyProto.PersonInfoOrBuilder> 
           getInfoOrBuilderList() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(info_);
        }
      }
      public wormhole.lobby.network.LobbyProto.PersonInfo.Builder addInfoBuilder() {
        return getInfoFieldBuilder().addBuilder(
            wormhole.lobby.network.LobbyProto.PersonInfo.getDefaultInstance());
      }
      public wormhole.lobby.network.LobbyProto.PersonInfo.Builder addInfoBuilder(
          int index) {
        return getInfoFieldBuilder().addBuilder(
            index, wormhole.lobby.network.LobbyProto.PersonInfo.getDefaultInstance());
      }
      public java.util.List<wormhole.lobby.network.LobbyProto.PersonInfo.Builder> 
           getInfoBuilderList() {
        return getInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.lobby.network.LobbyProto.PersonInfo, wormhole.lobby.network.LobbyProto.PersonInfo.Builder, wormhole.lobby.network.LobbyProto.PersonInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              wormhole.lobby.network.LobbyProto.PersonInfo, wormhole.lobby.network.LobbyProto.PersonInfo.Builder, wormhole.lobby.network.LobbyProto.PersonInfoOrBuilder>(
                  info_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.PersonSetInfo)
    }
    
    static {
      defaultInstance = new PersonSetInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.PersonSetInfo)
  }
  
  public interface PossibleColorListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .wormhole.ColorData colors = 1;
    java.util.List<wormhole.lobby.network.LobbyProto.ColorData> 
        getColorsList();
    wormhole.lobby.network.LobbyProto.ColorData getColors(int index);
    int getColorsCount();
    java.util.List<? extends wormhole.lobby.network.LobbyProto.ColorDataOrBuilder> 
        getColorsOrBuilderList();
    wormhole.lobby.network.LobbyProto.ColorDataOrBuilder getColorsOrBuilder(
        int index);
  }
  public static final class PossibleColorList extends
      com.google.protobuf.GeneratedMessage
      implements PossibleColorListOrBuilder {
    // Use PossibleColorList.newBuilder() to construct.
    private PossibleColorList(Builder builder) {
      super(builder);
    }
    private PossibleColorList(boolean noInit) {}
    
    private static final PossibleColorList defaultInstance;
    public static PossibleColorList getDefaultInstance() {
      return defaultInstance;
    }
    
    public PossibleColorList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PossibleColorList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PossibleColorList_fieldAccessorTable;
    }
    
    // repeated .wormhole.ColorData colors = 1;
    public static final int COLORS_FIELD_NUMBER = 1;
    private java.util.List<wormhole.lobby.network.LobbyProto.ColorData> colors_;
    public java.util.List<wormhole.lobby.network.LobbyProto.ColorData> getColorsList() {
      return colors_;
    }
    public java.util.List<? extends wormhole.lobby.network.LobbyProto.ColorDataOrBuilder> 
        getColorsOrBuilderList() {
      return colors_;
    }
    public int getColorsCount() {
      return colors_.size();
    }
    public wormhole.lobby.network.LobbyProto.ColorData getColors(int index) {
      return colors_.get(index);
    }
    public wormhole.lobby.network.LobbyProto.ColorDataOrBuilder getColorsOrBuilder(
        int index) {
      return colors_.get(index);
    }
    
    private void initFields() {
      colors_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getColorsCount(); i++) {
        if (!getColors(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < colors_.size(); i++) {
        output.writeMessage(1, colors_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < colors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, colors_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.lobby.network.LobbyProto.PossibleColorList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PossibleColorList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PossibleColorList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PossibleColorList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PossibleColorList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PossibleColorList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PossibleColorList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.lobby.network.LobbyProto.PossibleColorList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.lobby.network.LobbyProto.PossibleColorList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PossibleColorList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.lobby.network.LobbyProto.PossibleColorList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.lobby.network.LobbyProto.PossibleColorListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PossibleColorList_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PossibleColorList_fieldAccessorTable;
      }
      
      // Construct using wormhole.lobby.network.LobbyProto.PossibleColorList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getColorsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (colorsBuilder_ == null) {
          colors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          colorsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.lobby.network.LobbyProto.PossibleColorList.getDescriptor();
      }
      
      public wormhole.lobby.network.LobbyProto.PossibleColorList getDefaultInstanceForType() {
        return wormhole.lobby.network.LobbyProto.PossibleColorList.getDefaultInstance();
      }
      
      public wormhole.lobby.network.LobbyProto.PossibleColorList build() {
        wormhole.lobby.network.LobbyProto.PossibleColorList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.lobby.network.LobbyProto.PossibleColorList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.lobby.network.LobbyProto.PossibleColorList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.lobby.network.LobbyProto.PossibleColorList buildPartial() {
        wormhole.lobby.network.LobbyProto.PossibleColorList result = new wormhole.lobby.network.LobbyProto.PossibleColorList(this);
        int from_bitField0_ = bitField0_;
        if (colorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            colors_ = java.util.Collections.unmodifiableList(colors_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.colors_ = colors_;
        } else {
          result.colors_ = colorsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.lobby.network.LobbyProto.PossibleColorList) {
          return mergeFrom((wormhole.lobby.network.LobbyProto.PossibleColorList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.lobby.network.LobbyProto.PossibleColorList other) {
        if (other == wormhole.lobby.network.LobbyProto.PossibleColorList.getDefaultInstance()) return this;
        if (colorsBuilder_ == null) {
          if (!other.colors_.isEmpty()) {
            if (colors_.isEmpty()) {
              colors_ = other.colors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureColorsIsMutable();
              colors_.addAll(other.colors_);
            }
            onChanged();
          }
        } else {
          if (!other.colors_.isEmpty()) {
            if (colorsBuilder_.isEmpty()) {
              colorsBuilder_.dispose();
              colorsBuilder_ = null;
              colors_ = other.colors_;
              bitField0_ = (bitField0_ & ~0x00000001);
              colorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getColorsFieldBuilder() : null;
            } else {
              colorsBuilder_.addAllMessages(other.colors_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getColorsCount(); i++) {
          if (!getColors(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              wormhole.lobby.network.LobbyProto.ColorData.Builder subBuilder = wormhole.lobby.network.LobbyProto.ColorData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addColors(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .wormhole.ColorData colors = 1;
      private java.util.List<wormhole.lobby.network.LobbyProto.ColorData> colors_ =
        java.util.Collections.emptyList();
      private void ensureColorsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          colors_ = new java.util.ArrayList<wormhole.lobby.network.LobbyProto.ColorData>(colors_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.lobby.network.LobbyProto.ColorData, wormhole.lobby.network.LobbyProto.ColorData.Builder, wormhole.lobby.network.LobbyProto.ColorDataOrBuilder> colorsBuilder_;
      
      public java.util.List<wormhole.lobby.network.LobbyProto.ColorData> getColorsList() {
        if (colorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(colors_);
        } else {
          return colorsBuilder_.getMessageList();
        }
      }
      public int getColorsCount() {
        if (colorsBuilder_ == null) {
          return colors_.size();
        } else {
          return colorsBuilder_.getCount();
        }
      }
      public wormhole.lobby.network.LobbyProto.ColorData getColors(int index) {
        if (colorsBuilder_ == null) {
          return colors_.get(index);
        } else {
          return colorsBuilder_.getMessage(index);
        }
      }
      public Builder setColors(
          int index, wormhole.lobby.network.LobbyProto.ColorData value) {
        if (colorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColorsIsMutable();
          colors_.set(index, value);
          onChanged();
        } else {
          colorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setColors(
          int index, wormhole.lobby.network.LobbyProto.ColorData.Builder builderForValue) {
        if (colorsBuilder_ == null) {
          ensureColorsIsMutable();
          colors_.set(index, builderForValue.build());
          onChanged();
        } else {
          colorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addColors(wormhole.lobby.network.LobbyProto.ColorData value) {
        if (colorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColorsIsMutable();
          colors_.add(value);
          onChanged();
        } else {
          colorsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addColors(
          int index, wormhole.lobby.network.LobbyProto.ColorData value) {
        if (colorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColorsIsMutable();
          colors_.add(index, value);
          onChanged();
        } else {
          colorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addColors(
          wormhole.lobby.network.LobbyProto.ColorData.Builder builderForValue) {
        if (colorsBuilder_ == null) {
          ensureColorsIsMutable();
          colors_.add(builderForValue.build());
          onChanged();
        } else {
          colorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addColors(
          int index, wormhole.lobby.network.LobbyProto.ColorData.Builder builderForValue) {
        if (colorsBuilder_ == null) {
          ensureColorsIsMutable();
          colors_.add(index, builderForValue.build());
          onChanged();
        } else {
          colorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllColors(
          java.lang.Iterable<? extends wormhole.lobby.network.LobbyProto.ColorData> values) {
        if (colorsBuilder_ == null) {
          ensureColorsIsMutable();
          super.addAll(values, colors_);
          onChanged();
        } else {
          colorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearColors() {
        if (colorsBuilder_ == null) {
          colors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          colorsBuilder_.clear();
        }
        return this;
      }
      public Builder removeColors(int index) {
        if (colorsBuilder_ == null) {
          ensureColorsIsMutable();
          colors_.remove(index);
          onChanged();
        } else {
          colorsBuilder_.remove(index);
        }
        return this;
      }
      public wormhole.lobby.network.LobbyProto.ColorData.Builder getColorsBuilder(
          int index) {
        return getColorsFieldBuilder().getBuilder(index);
      }
      public wormhole.lobby.network.LobbyProto.ColorDataOrBuilder getColorsOrBuilder(
          int index) {
        if (colorsBuilder_ == null) {
          return colors_.get(index);  } else {
          return colorsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends wormhole.lobby.network.LobbyProto.ColorDataOrBuilder> 
           getColorsOrBuilderList() {
        if (colorsBuilder_ != null) {
          return colorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(colors_);
        }
      }
      public wormhole.lobby.network.LobbyProto.ColorData.Builder addColorsBuilder() {
        return getColorsFieldBuilder().addBuilder(
            wormhole.lobby.network.LobbyProto.ColorData.getDefaultInstance());
      }
      public wormhole.lobby.network.LobbyProto.ColorData.Builder addColorsBuilder(
          int index) {
        return getColorsFieldBuilder().addBuilder(
            index, wormhole.lobby.network.LobbyProto.ColorData.getDefaultInstance());
      }
      public java.util.List<wormhole.lobby.network.LobbyProto.ColorData.Builder> 
           getColorsBuilderList() {
        return getColorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          wormhole.lobby.network.LobbyProto.ColorData, wormhole.lobby.network.LobbyProto.ColorData.Builder, wormhole.lobby.network.LobbyProto.ColorDataOrBuilder> 
          getColorsFieldBuilder() {
        if (colorsBuilder_ == null) {
          colorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              wormhole.lobby.network.LobbyProto.ColorData, wormhole.lobby.network.LobbyProto.ColorData.Builder, wormhole.lobby.network.LobbyProto.ColorDataOrBuilder>(
                  colors_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          colors_ = null;
        }
        return colorsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.PossibleColorList)
    }
    
    static {
      defaultInstance = new PossibleColorList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.PossibleColorList)
  }
  
  public interface ColorDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 color = 1;
    boolean hasColor();
    int getColor();
  }
  public static final class ColorData extends
      com.google.protobuf.GeneratedMessage
      implements ColorDataOrBuilder {
    // Use ColorData.newBuilder() to construct.
    private ColorData(Builder builder) {
      super(builder);
    }
    private ColorData(boolean noInit) {}
    
    private static final ColorData defaultInstance;
    public static ColorData getDefaultInstance() {
      return defaultInstance;
    }
    
    public ColorData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.lobby.network.LobbyProto.internal_static_wormhole_ColorData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.lobby.network.LobbyProto.internal_static_wormhole_ColorData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 color = 1;
    public static final int COLOR_FIELD_NUMBER = 1;
    private int color_;
    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getColor() {
      return color_;
    }
    
    private void initFields() {
      color_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasColor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, color_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, color_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.lobby.network.LobbyProto.ColorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.ColorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.ColorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.ColorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.ColorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.ColorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.ColorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.lobby.network.LobbyProto.ColorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.lobby.network.LobbyProto.ColorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.ColorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.lobby.network.LobbyProto.ColorData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.lobby.network.LobbyProto.ColorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.lobby.network.LobbyProto.internal_static_wormhole_ColorData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.lobby.network.LobbyProto.internal_static_wormhole_ColorData_fieldAccessorTable;
      }
      
      // Construct using wormhole.lobby.network.LobbyProto.ColorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.lobby.network.LobbyProto.ColorData.getDescriptor();
      }
      
      public wormhole.lobby.network.LobbyProto.ColorData getDefaultInstanceForType() {
        return wormhole.lobby.network.LobbyProto.ColorData.getDefaultInstance();
      }
      
      public wormhole.lobby.network.LobbyProto.ColorData build() {
        wormhole.lobby.network.LobbyProto.ColorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.lobby.network.LobbyProto.ColorData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.lobby.network.LobbyProto.ColorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.lobby.network.LobbyProto.ColorData buildPartial() {
        wormhole.lobby.network.LobbyProto.ColorData result = new wormhole.lobby.network.LobbyProto.ColorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.color_ = color_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.lobby.network.LobbyProto.ColorData) {
          return mergeFrom((wormhole.lobby.network.LobbyProto.ColorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.lobby.network.LobbyProto.ColorData other) {
        if (other == wormhole.lobby.network.LobbyProto.ColorData.getDefaultInstance()) return this;
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasColor()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              color_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 color = 1;
      private int color_ ;
      public boolean hasColor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getColor() {
        return color_;
      }
      public Builder setColor(int value) {
        bitField0_ |= 0x00000001;
        color_ = value;
        onChanged();
        return this;
      }
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.ColorData)
    }
    
    static {
      defaultInstance = new ColorData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.ColorData)
  }
  
  public interface PersonInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // required int32 color = 2;
    boolean hasColor();
    int getColor();
  }
  public static final class PersonInfo extends
      com.google.protobuf.GeneratedMessage
      implements PersonInfoOrBuilder {
    // Use PersonInfo.newBuilder() to construct.
    private PersonInfo(Builder builder) {
      super(builder);
    }
    private PersonInfo(boolean noInit) {}
    
    private static final PersonInfo defaultInstance;
    public static PersonInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PersonInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PersonInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PersonInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 color = 2;
    public static final int COLOR_FIELD_NUMBER = 2;
    private int color_;
    public boolean hasColor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getColor() {
      return color_;
    }
    
    private void initFields() {
      name_ = "";
      color_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, color_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, color_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static wormhole.lobby.network.LobbyProto.PersonInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.lobby.network.LobbyProto.PersonInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static wormhole.lobby.network.LobbyProto.PersonInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static wormhole.lobby.network.LobbyProto.PersonInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(wormhole.lobby.network.LobbyProto.PersonInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements wormhole.lobby.network.LobbyProto.PersonInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PersonInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wormhole.lobby.network.LobbyProto.internal_static_wormhole_PersonInfo_fieldAccessorTable;
      }
      
      // Construct using wormhole.lobby.network.LobbyProto.PersonInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wormhole.lobby.network.LobbyProto.PersonInfo.getDescriptor();
      }
      
      public wormhole.lobby.network.LobbyProto.PersonInfo getDefaultInstanceForType() {
        return wormhole.lobby.network.LobbyProto.PersonInfo.getDefaultInstance();
      }
      
      public wormhole.lobby.network.LobbyProto.PersonInfo build() {
        wormhole.lobby.network.LobbyProto.PersonInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private wormhole.lobby.network.LobbyProto.PersonInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        wormhole.lobby.network.LobbyProto.PersonInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public wormhole.lobby.network.LobbyProto.PersonInfo buildPartial() {
        wormhole.lobby.network.LobbyProto.PersonInfo result = new wormhole.lobby.network.LobbyProto.PersonInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.color_ = color_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wormhole.lobby.network.LobbyProto.PersonInfo) {
          return mergeFrom((wormhole.lobby.network.LobbyProto.PersonInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(wormhole.lobby.network.LobbyProto.PersonInfo other) {
        if (other == wormhole.lobby.network.LobbyProto.PersonInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasColor()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              color_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // required int32 color = 2;
      private int color_ ;
      public boolean hasColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getColor() {
        return color_;
      }
      public Builder setColor(int value) {
        bitField0_ |= 0x00000002;
        color_ = value;
        onChanged();
        return this;
      }
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        color_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wormhole.PersonInfo)
    }
    
    static {
      defaultInstance = new PersonInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wormhole.PersonInfo)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_LobbyMessageType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_LobbyMessageType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_PersonSetInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_PersonSetInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_PossibleColorList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_PossibleColorList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_ColorData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_ColorData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wormhole_PersonInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wormhole_PersonInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013lobby.proto\022\010wormhole\"7\n\020LobbyMessageT" +
      "ype\022#\n\004type\030\001 \002(\0162\025.wormhole.MessageType" +
      "\"3\n\rPersonSetInfo\022\"\n\004info\030\001 \003(\0132\024.wormho" +
      "le.PersonInfo\"8\n\021PossibleColorList\022#\n\006co" +
      "lors\030\001 \003(\0132\023.wormhole.ColorData\"\032\n\tColor" +
      "Data\022\r\n\005color\030\001 \002(\005\")\n\nPersonInfo\022\014\n\004nam" +
      "e\030\001 \002(\t\022\r\n\005color\030\002 \002(\005*\250\001\n\013MessageType\022\016" +
      "\n\nNEW_PERSON\020\000\022\017\n\013LOST_PERSON\020\001\022\023\n\017PERSO" +
      "N_SET_INFO\020\002\022\t\n\005START\020\003\022\021\n\rSTART_CONFIRM" +
      "\020\004\022\017\n\013CHANGE_INFO\020\005\022\016\n\nDISCONNECT\020\006\022\023\n\017C",
      "OLOR_AVAILABLE\020\007\022\017\n\013COLOR_TAKEN\020\010B$\n\026wor" +
      "mhole.lobby.networkB\nLobbyProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_wormhole_LobbyMessageType_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_wormhole_LobbyMessageType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_LobbyMessageType_descriptor,
              new java.lang.String[] { "Type", },
              wormhole.lobby.network.LobbyProto.LobbyMessageType.class,
              wormhole.lobby.network.LobbyProto.LobbyMessageType.Builder.class);
          internal_static_wormhole_PersonSetInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_wormhole_PersonSetInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_PersonSetInfo_descriptor,
              new java.lang.String[] { "Info", },
              wormhole.lobby.network.LobbyProto.PersonSetInfo.class,
              wormhole.lobby.network.LobbyProto.PersonSetInfo.Builder.class);
          internal_static_wormhole_PossibleColorList_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_wormhole_PossibleColorList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_PossibleColorList_descriptor,
              new java.lang.String[] { "Colors", },
              wormhole.lobby.network.LobbyProto.PossibleColorList.class,
              wormhole.lobby.network.LobbyProto.PossibleColorList.Builder.class);
          internal_static_wormhole_ColorData_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_wormhole_ColorData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_ColorData_descriptor,
              new java.lang.String[] { "Color", },
              wormhole.lobby.network.LobbyProto.ColorData.class,
              wormhole.lobby.network.LobbyProto.ColorData.Builder.class);
          internal_static_wormhole_PersonInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_wormhole_PersonInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wormhole_PersonInfo_descriptor,
              new java.lang.String[] { "Name", "Color", },
              wormhole.lobby.network.LobbyProto.PersonInfo.class,
              wormhole.lobby.network.LobbyProto.PersonInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
